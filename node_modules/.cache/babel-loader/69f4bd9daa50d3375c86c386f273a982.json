{"ast":null,"code":"'use strict';\n/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\n\nclass ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n    Object.setPrototypeOf(this, ValidationError.prototype);\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\n\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n\nexports.validate = validate;","map":{"version":3,"sources":["/Users/massimilianoalbini/Documents/gain-drop/gain-drop/node_modules/@shapeshiftoss/bitcoinjs-lib/src/cashaddr/validation.js"],"names":["Object","defineProperty","exports","value","ValidationError","Error","constructor","message","name","setPrototypeOf","prototype","validate","condition"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAN,SAA8BC,KAA9B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,iBAAZ;AACAR,IAAAA,MAAM,CAACS,cAAP,CAAsB,IAAtB,EAA4BL,eAAe,CAACM,SAA5C;AACD;;AALiC;;AAOpCR,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASO,QAAT,CAAkBC,SAAlB,EAA6BL,OAA7B,EAAsC;AACpC,MAAI,CAACK,SAAL,EAAgB;AACd,UAAM,IAAIR,eAAJ,CAAoBG,OAApB,CAAN;AACD;AACF;;AACDL,OAAO,CAACS,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\nObject.defineProperty(exports, '__esModule', { value: true });\n/**\n * Validation utility.\n *\n * @module validation\n */\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nclass ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n    Object.setPrototypeOf(this, ValidationError.prototype);\n  }\n}\nexports.ValidationError = ValidationError;\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\nexports.validate = validate;\n"]},"metadata":{},"sourceType":"script"}