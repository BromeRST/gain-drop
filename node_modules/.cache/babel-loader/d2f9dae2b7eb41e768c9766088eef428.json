{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.thorchainGetAddress = exports.thorchainSignTx = exports.thorchainGetAccountPaths = void 0;\n\nconst ThorchainMessages = __importStar(require(\"@keepkey/device-protocol/lib/messages-thorchain_pb\"));\n\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\n\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nfunction thorchainGetAccountPaths(msg) {\n  return [{\n    addressNList: [0x80000000 + 44, 0x80000000 + core.slip44ByCoin(\"Thorchain\"), 0x80000000 + msg.accountIdx, 0, 0]\n  }];\n}\n\nexports.thorchainGetAccountPaths = thorchainGetAccountPaths;\n\nfunction thorchainSignTx(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n      const signTx = new ThorchainMessages.ThorchainSignTx();\n      signTx.setAddressNList(msg.addressNList);\n      signTx.setAccountNumber(msg.account_number);\n      signTx.setChainId(msg.chain_id);\n      signTx.setFeeAmount(parseInt(msg.tx.fee.amount[0].amount));\n      signTx.setGas(parseInt(msg.tx.fee.gas));\n      signTx.setSequence(msg.sequence);\n      if (msg.tx.memo !== undefined) signTx.setMemo(msg.tx.memo);\n      signTx.setMsgCount(1);\n      let resp = yield transport.call(Messages.MessageType.MESSAGETYPE_THORCHAINSIGNTX, signTx, {\n        msgTimeout: core.LONG_TIMEOUT,\n        omitLock: true\n      });\n\n      for (let m of msg.tx.msg) {\n        if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_THORCHAINMSGREQUEST) {\n          throw new Error(`THORChain: unexpected response ${resp.message_type}`);\n        }\n\n        let ack;\n\n        if (m.type === \"thorchain/MsgSend\") {\n          if (m.value.amount.length !== 1) {\n            throw new Error(\"THORChain: Multiple amounts per MsgSend not supported\");\n          }\n\n          const denom = m.value.amount[0].denom;\n\n          if (denom !== \"rune\") {\n            throw new Error(\"THORChain: Unsupported denomination: \" + denom);\n          }\n\n          const send = new ThorchainMessages.ThorchainMsgSend();\n          send.setFromAddress(m.value.from_address);\n          send.setToAddress(m.value.to_address);\n          send.setAmount(m.value.amount[0].amount);\n          ack = new ThorchainMessages.ThorchainMsgAck();\n          ack.setSend(send);\n        } else if (m.type === \"thorchain/MsgDeposit\") {\n          if (m.value.coins.length !== 1) {\n            throw new Error(\"THORChain: Multiple amounts per MsgDeposit not supported\");\n          }\n\n          const coinAsset = m.value.coins[0].asset;\n\n          if (coinAsset !== \"THOR.RUNE\") {\n            throw new Error(\"THORChain: Unsupported coin asset: \" + coinAsset);\n          }\n\n          const deposit = new ThorchainMessages.ThorchainMsgDeposit();\n          deposit.setAsset(m.value.coins[0].asset);\n          deposit.setAmount(m.value.coins[0].amount);\n          deposit.setMemo(m.value.memo);\n          deposit.setSigner(m.value.signer);\n          ack = new ThorchainMessages.ThorchainMsgAck();\n          ack.setDeposit(deposit);\n        } else {\n          throw new Error(`THORChain: Message ${m.type} is not yet supported`);\n        }\n\n        resp = yield transport.call(Messages.MessageType.MESSAGETYPE_THORCHAINMSGACK, ack, {\n          msgTimeout: core.LONG_TIMEOUT,\n          omitLock: true\n        });\n      }\n\n      if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_THORCHAINSIGNEDTX) {\n        throw new Error(`THORChain: unexpected response ${resp.message_type}`);\n      }\n\n      const signedTx = resp.proto;\n      const signed = lodash_1.default.cloneDeep(msg.tx);\n      signed.signatures = [{\n        signature: signedTx.getSignature_asB64(),\n        pub_key: {\n          type: \"tendermint/PubKeySecp256k1\",\n          value: signedTx.getPublicKey_asB64()\n        }\n      }];\n      return signed;\n    }));\n  });\n}\n\nexports.thorchainSignTx = thorchainSignTx;\n\nfunction thorchainGetAddress(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const getAddr = new ThorchainMessages.ThorchainGetAddress();\n    getAddr.setAddressNList(msg.addressNList);\n    getAddr.setShowDisplay(msg.showDisplay !== false);\n    if (msg.testnet !== undefined) getAddr.setTestnet(msg.testnet);\n    const response = yield transport.call(Messages.MessageType.MESSAGETYPE_THORCHAINGETADDRESS, getAddr, {\n      msgTimeout: core.LONG_TIMEOUT\n    });\n    const thorchainAddress = response.proto;\n    return core.mustBeDefined(thorchainAddress.getAddress());\n  });\n}\n\nexports.thorchainGetAddress = thorchainGetAddress;","map":{"version":3,"mappings":"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","names":["thorchainGetAccountPaths","msg","addressNList","core","slip44ByCoin","accountIdx","exports","thorchainSignTx","transport","lockDuring","__awaiter","signTx","ThorchainMessages","ThorchainSignTx","setAddressNList","setAccountNumber","account_number","setChainId","chain_id","setFeeAmount","parseInt","tx","fee","amount","setGas","gas","setSequence","sequence","memo","undefined","setMemo","setMsgCount","resp","call","Messages","MessageType","MESSAGETYPE_THORCHAINSIGNTX","msgTimeout","LONG_TIMEOUT","omitLock","m","message_enum","MESSAGETYPE_THORCHAINMSGREQUEST","Error","message_type","ack","type","value","length","denom","send","ThorchainMsgSend","setFromAddress","from_address","setToAddress","to_address","setAmount","ThorchainMsgAck","setSend","coins","coinAsset","asset","deposit","ThorchainMsgDeposit","setAsset","setSigner","signer","setDeposit","MESSAGETYPE_THORCHAINMSGACK","MESSAGETYPE_THORCHAINSIGNEDTX","signedTx","proto","signed","lodash_1","cloneDeep","signatures","signature","getSignature_asB64","pub_key","getPublicKey_asB64","thorchainGetAddress","getAddr","ThorchainGetAddress","setShowDisplay","showDisplay","testnet","setTestnet","response","MESSAGETYPE_THORCHAINGETADDRESS","thorchainAddress","mustBeDefined","getAddress"],"sourceRoot":"","sources":["../src/thorchain.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}