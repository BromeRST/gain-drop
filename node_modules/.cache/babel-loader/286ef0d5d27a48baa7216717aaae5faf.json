{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnimatedQRCodePlayer = void 0;\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst BaseQRCode_1 = require(\"../components/BaseQRCode\");\n\nconst bc_ur_1 = require(\"@cvbb/bc-ur\");\n\nconst events_1 = require(\"events\");\n\nconst Button_1 = require(\"../components/Button\");\n\nconst ButtonGroup_1 = require(\"../components/ButtonGroup\");\n\nconst useAnimatedQRCodePlayer = () => {\n  const [data, setData] = react_1.useState([]);\n  const [refreshSpeed, setRefreshSpeed] = react_1.useState(500);\n  const [hasNext, setHasNext] = react_1.useState(false);\n  const [index, setIndex] = react_1.useState(0);\n  const [title, setTitle] = react_1.useState(null);\n  const [description, setDescription] = react_1.useState(null);\n  const [isPause, setPause] = react_1.useState(false);\n\n  const pause = () => {\n    setPause(true);\n  };\n\n  const play = () => {\n    setPause(false);\n  };\n\n  const next = () => {\n    setIndex(index => {\n      if (index >= splitArray.length - 1) {\n        return 0;\n      } else {\n        return index + 1;\n      }\n    });\n  };\n\n  const prev = () => {\n    setIndex(index => {\n      if (index < 0) {\n        return splitArray.length - 1;\n      } else {\n        return index - 1;\n      }\n    });\n  };\n\n  const ee = react_1.useMemo(() => new events_1.EventEmitter(), []);\n  const splitArray = data;\n\n  const reset = () => {\n    setData([]);\n    setRefreshSpeed(500);\n    setIndex(0);\n  };\n\n  react_1.useEffect(() => {\n    if (!isPause) {\n      const subscribe = rxjs_1.interval(refreshSpeed).subscribe(() => {\n        next();\n      });\n      return () => {\n        subscribe.unsubscribe();\n      };\n    }\n  }, [refreshSpeed, splitArray, isPause]);\n\n  const finish = () => {\n    ee.emit('finish', true);\n  };\n\n  const element = react_1.default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  }, title && react_1.default.createElement(\"p\", null, title), description && react_1.default.createElement(\"p\", null, description), react_1.default.createElement(BaseQRCode_1.BaseQRCode, {\n    size: 288,\n    data: splitArray[index]\n  }), react_1.default.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, index + 1, \"/\", splitArray.length), react_1.default.createElement(ButtonGroup_1.ButtonGroup, null, isPause ? react_1.default.createElement(Button_1.Button, {\n    onClick: play\n  }, \"Play\") : react_1.default.createElement(Button_1.Button, {\n    onClick: pause\n  }, \"Pause\"), react_1.default.createElement(Button_1.Button, {\n    onClick: next\n  }, \"Next\"), react_1.default.createElement(Button_1.Button, {\n    onClick: prev\n  }, \"Prev\")), react_1.default.createElement(ButtonGroup_1.ButtonGroup, null, react_1.default.createElement(Button_1.Button, {\n    onClick: finish\n  }, hasNext ? 'Next' : 'Finish')));\n  return [element, {\n    play: (data, options) => {\n      return new Promise(resolve => {\n        const urs = bc_ur_1.encodeUR(data, 800);\n        setData(urs);\n\n        if (options) {\n          options.refreshSpeed && setRefreshSpeed(options.refreshSpeed);\n          options.hasNext && setHasNext(options.hasNext);\n          options.title && setTitle(options.title);\n          options.description && setDescription(options.description);\n        }\n\n        ee.once('finish', () => {\n          reset();\n          resolve();\n        });\n      });\n    }\n  }];\n};\n\nexports.useAnimatedQRCodePlayer = useAnimatedQRCodePlayer;","map":{"version":3,"mappings":"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","names":["useAnimatedQRCodePlayer","data","setData","react_1","refreshSpeed","setRefreshSpeed","hasNext","setHasNext","index","setIndex","title","setTitle","description","setDescription","isPause","setPause","pause","play","next","splitArray","length","prev","ee","events_1","reset","subscribe","rxjs_1","unsubscribe","finish","emit","element","style","display","flexDirection","alignItems","BaseQRCode_1","size","textAlign","ButtonGroup_1","Button_1","onClick","options","Promise","resolve","urs","bc_ur_1","once","exports"],"sourceRoot":"","sources":["../../lib/hooks/useAnimatedQRCodePlayer.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}