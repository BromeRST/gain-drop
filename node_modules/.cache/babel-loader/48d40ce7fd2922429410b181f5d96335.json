{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = exports.info = exports.KeepKeyHDWallet = exports.KeepKeyHDWalletInfo = exports.isKeepKey = void 0;\n\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\n\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\n\nconst Types = __importStar(require(\"@keepkey/device-protocol/lib/types_pb\"));\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nconst semver_1 = __importDefault(require(\"semver\"));\n\nconst Binance = __importStar(require(\"./binance\"));\n\nconst Btc = __importStar(require(\"./bitcoin\"));\n\nconst Cosmos = __importStar(require(\"./cosmos\"));\n\nconst Eos = __importStar(require(\"./eos\"));\n\nconst Eth = __importStar(require(\"./ethereum\"));\n\nconst Ripple = __importStar(require(\"./ripple\"));\n\nconst Thorchain = __importStar(require(\"./thorchain\"));\n\nconst typeRegistry_1 = require(\"./typeRegistry\");\n\nconst utils_1 = require(\"./utils\");\n\nfunction isKeepKey(wallet) {\n  return lodash_1.default.isObject(wallet) && wallet._isKeepKey;\n}\n\nexports.isKeepKey = isKeepKey;\n\nfunction describeETHPath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Ethereum\",\n    isKnown: false\n  };\n  if (path.length != 5) return unknown;\n  if (path[0] != 0x80000000 + 44) return unknown;\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Ethereum\")) return unknown;\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) return unknown;\n  if (path[3] != 0) return unknown;\n  if (path[4] != 0) return unknown;\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Ethereum Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Ethereum\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nfunction describeUTXOPath(path, coin, scriptType) {\n  var _a;\n\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin,\n    scriptType,\n    isKnown: false\n  };\n  if (!scriptType) return unknown;\n  if (!Btc.btcSupportsCoin(coin)) return unknown;\n  if (!Btc.btcSupportsScriptType(coin, scriptType)) return unknown;\n  if (path.length !== 3 && path.length !== 5) return unknown;\n  if ((path[0] & 0x80000000) >>> 0 !== 0x80000000) return unknown;\n  let purpose = path[0] & 0x7fffffff;\n  if (![44, 49, 84].includes(purpose)) return unknown;\n  if (purpose === 44 && scriptType !== core.BTCInputScriptType.SpendAddress) return unknown;\n  if (purpose === 49 && scriptType !== core.BTCInputScriptType.SpendP2SHWitness) return unknown;\n  if (purpose === 84 && scriptType !== core.BTCInputScriptType.SpendWitness) return unknown;\n  let wholeAccount = path.length === 3;\n  let script = scriptType ? (_a = {\n    [core.BTCInputScriptType.SpendAddress]: [\"Legacy\"],\n    [core.BTCInputScriptType.SpendP2SHWitness]: [],\n    [core.BTCInputScriptType.SpendWitness]: [\"Segwit Native\"]\n  }[scriptType]) !== null && _a !== void 0 ? _a : [] : [];\n  let isPrefork = false;\n  const slip44 = core.slip44ByCoin(coin);\n  if (slip44 === undefined) return unknown;\n\n  if (path[1] !== 0x80000000 + slip44) {\n    switch (coin) {\n      case \"BitcoinCash\":\n      case \"BitcoinGold\":\n        {\n          if (path[1] === 0x80000000 + core.slip44ByCoin(\"Bitcoin\")) {\n            isPrefork = true;\n            break;\n          }\n\n          return unknown;\n        }\n\n      case \"BitcoinSV\":\n        {\n          if (path[1] === 0x80000000 + core.slip44ByCoin(\"Bitcoin\") || path[1] === 0x80000000 + core.slip44ByCoin(\"BitcoinCash\")) {\n            isPrefork = true;\n            break;\n          }\n\n          return unknown;\n        }\n\n      default:\n        return unknown;\n    }\n  }\n\n  let attributes = isPrefork ? [\"Prefork\"] : [];\n\n  switch (coin) {\n    case \"Bitcoin\":\n    case \"Litecoin\":\n    case \"BitcoinGold\":\n    case \"Testnet\":\n      {\n        attributes = attributes.concat(script);\n        break;\n      }\n\n    default:\n      break;\n  }\n\n  let attr = attributes.length ? ` (${attributes.join(\", \")})` : \"\";\n  let accountIdx = path[2] & 0x7fffffff;\n\n  if (wholeAccount) {\n    return {\n      coin,\n      verbose: `${coin} Account #${accountIdx}${attr}`,\n      accountIdx,\n      wholeAccount: true,\n      isKnown: true,\n      scriptType,\n      isPrefork\n    };\n  } else {\n    let change = path[3] === 1 ? \"Change \" : \"\";\n    let addressIdx = path[4];\n    return {\n      coin,\n      verbose: `${coin} Account #${accountIdx}, ${change}Address #${addressIdx}${attr}`,\n      accountIdx,\n      addressIdx,\n      wholeAccount: false,\n      isKnown: true,\n      isChange: path[3] === 1,\n      scriptType,\n      isPrefork\n    };\n  }\n}\n\nfunction describeCosmosPath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Atom\",\n    isKnown: false\n  };\n\n  if (path.length != 5) {\n    return unknown;\n  }\n\n  if (path[0] != 0x80000000 + 44) {\n    return unknown;\n  }\n\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Atom\")) {\n    return unknown;\n  }\n\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n    return unknown;\n  }\n\n  if (path[3] !== 0 || path[4] !== 0) {\n    return unknown;\n  }\n\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Cosmos Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Atom\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nfunction describeThorchainPath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Rune\",\n    isKnown: false\n  };\n\n  if (path.length != 5) {\n    return unknown;\n  }\n\n  if (path[0] != 0x80000000 + 44) {\n    return unknown;\n  }\n\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Rune\")) {\n    return unknown;\n  }\n\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n    return unknown;\n  }\n\n  if (path[3] !== 0 || path[4] !== 0) {\n    return unknown;\n  }\n\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `THORChain Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Rune\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nfunction describeEosPath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Eos\",\n    isKnown: false\n  };\n\n  if (path.length != 5) {\n    return unknown;\n  }\n\n  if (path[0] != 0x80000000 + 44) {\n    return unknown;\n  }\n\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Eos\")) {\n    return unknown;\n  }\n\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n    return unknown;\n  }\n\n  if (path[3] !== 0 || path[4] !== 0) {\n    return unknown;\n  }\n\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Eos Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Eos\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nfunction describeRipplePath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Ripple\",\n    isKnown: false\n  };\n\n  if (path.length != 5) {\n    return unknown;\n  }\n\n  if (path[0] != 0x80000000 + 44) {\n    return unknown;\n  }\n\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Ripple\")) {\n    return unknown;\n  }\n\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n    return unknown;\n  }\n\n  if (path[3] !== 0 || path[4] !== 0) {\n    return unknown;\n  }\n\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Ripple Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Ripple\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nfunction describeBinancePath(path) {\n  let pathStr = core.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Binance\",\n    isKnown: false\n  };\n\n  if (path.length != 5) {\n    return unknown;\n  }\n\n  if (path[0] != 0x80000000 + 44) {\n    return unknown;\n  }\n\n  if (path[1] != 0x80000000 + core.slip44ByCoin(\"Binance\")) {\n    return unknown;\n  }\n\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) {\n    return unknown;\n  }\n\n  if (path[3] !== 0 || path[4] !== 0) {\n    return unknown;\n  }\n\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Binance Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Binance\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nclass KeepKeyHDWalletInfo {\n  constructor() {\n    this._supportsBTCInfo = true;\n    this._supportsETHInfo = true;\n    this._supportsCosmosInfo = false;\n    this._supportsRippleInfo = true;\n    this._supportsBinanceInfo = true;\n    this._supportsEosInfo = true;\n    this._supportsThorchainInfo = true;\n  }\n\n  getVendor() {\n    return \"KeepKey\";\n  }\n\n  btcSupportsCoin(coin) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcSupportsCoin(coin);\n    });\n  }\n\n  btcSupportsScriptType(coin, scriptType) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcSupportsScriptType(coin, scriptType);\n    });\n  }\n\n  btcSupportsSecureTransfer() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcSupportsSecureTransfer();\n    });\n  }\n\n  btcSupportsNativeShapeShift() {\n    return Btc.btcSupportsNativeShapeShift();\n  }\n\n  btcGetAccountPaths(msg) {\n    return Btc.btcGetAccountPaths(msg);\n  }\n\n  btcIsSameAccount(msg) {\n    return Btc.btcIsSameAccount(msg);\n  }\n\n  ethSupportsNetwork(chain_id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethSupportsNetwork(chain_id);\n    });\n  }\n\n  ethSupportsSecureTransfer() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethSupportsSecureTransfer();\n    });\n  }\n\n  ethSupportsNativeShapeShift() {\n    return Eth.ethSupportsNativeShapeShift();\n  }\n\n  ethSupportsEIP1559() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return true;\n    });\n  }\n\n  ethGetAccountPaths(msg) {\n    return Eth.ethGetAccountPaths(msg);\n  }\n\n  cosmosGetAccountPaths(msg) {\n    return Cosmos.cosmosGetAccountPaths(msg);\n  }\n\n  thorchainGetAccountPaths(msg) {\n    return Thorchain.thorchainGetAccountPaths(msg);\n  }\n\n  rippleGetAccountPaths(msg) {\n    return Ripple.rippleGetAccountPaths(msg);\n  }\n\n  binanceGetAccountPaths(msg) {\n    return Binance.binanceGetAccountPaths(msg);\n  }\n\n  eosGetAccountPaths(msg) {\n    return Eos.eosGetAccountPaths(msg);\n  }\n\n  hasOnDevicePinEntry() {\n    return false;\n  }\n\n  hasOnDevicePassphrase() {\n    return false;\n  }\n\n  hasOnDeviceDisplay() {\n    return true;\n  }\n\n  hasOnDeviceRecovery() {\n    return false;\n  }\n\n  hasNativeShapeShift(srcCoin, dstCoin) {\n    return true;\n  }\n\n  supportsOfflineSigning() {\n    return true;\n  }\n\n  supportsBroadcast() {\n    return false;\n  }\n\n  describePath(msg) {\n    switch (msg.coin) {\n      case \"Ethereum\":\n        return describeETHPath(msg.path);\n\n      case \"Atom\":\n        return describeCosmosPath(msg.path);\n\n      case \"Binance\":\n        return describeBinancePath(msg.path);\n\n      case \"Ripple\":\n        return describeRipplePath(msg.path);\n\n      case \"Eos\":\n        return describeEosPath(msg.path);\n\n      default:\n        return describeUTXOPath(msg.path, msg.coin, msg.scriptType);\n    }\n  }\n\n  btcNextAccountPath(msg) {\n    let description = describeUTXOPath(msg.addressNList, msg.coin, msg.scriptType);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n\n    if (addressNList[0] === 0x80000000 + 44 || addressNList[0] === 0x80000000 + 49 || addressNList[0] === 0x80000000 + 84) {\n      addressNList[2] += 1;\n      return Object.assign(Object.assign({}, msg), {\n        addressNList\n      });\n    }\n\n    return undefined;\n  }\n\n  ethNextAccountPath(msg) {\n    let addressNList = msg.hardenedPath.concat(msg.relPath);\n    let description = describeETHPath(addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    if (addressNList[0] === 0x80000000 + 44) {\n      addressNList[2] += 1;\n      return Object.assign(Object.assign({}, msg), {\n        addressNList,\n        hardenedPath: core.hardenedPath(addressNList),\n        relPath: core.relativePath(addressNList)\n      });\n    }\n\n    return undefined;\n  }\n\n  cosmosNextAccountPath(msg) {\n    let description = describeCosmosPath(msg.addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n    addressNList[2] += 1;\n    return Object.assign(Object.assign({}, msg), {\n      addressNList\n    });\n  }\n\n  thorchainNextAccountPath(msg) {\n    let description = describeThorchainPath(msg.addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n    addressNList[2] += 1;\n    return Object.assign(Object.assign({}, msg), {\n      addressNList\n    });\n  }\n\n  rippleNextAccountPath(msg) {\n    let description = describeRipplePath(msg.addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n    addressNList[2] += 1;\n    return Object.assign(Object.assign({}, msg), {\n      addressNList\n    });\n  }\n\n  binanceNextAccountPath(msg) {\n    let description = describeBinancePath(msg.addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n    addressNList[2] += 1;\n    return Object.assign(Object.assign({}, msg), {\n      addressNList\n    });\n  }\n\n  eosNextAccountPath(msg) {\n    let description = describeEosPath(msg.addressNList);\n\n    if (!description.isKnown) {\n      return undefined;\n    }\n\n    let addressNList = msg.addressNList;\n    addressNList[2] += 1;\n    return Object.assign(Object.assign({}, msg), {\n      addressNList\n    });\n  }\n\n}\n\nexports.KeepKeyHDWalletInfo = KeepKeyHDWalletInfo;\n\nclass KeepKeyHDWallet {\n  constructor(transport) {\n    this._supportsETHInfo = true;\n    this._supportsBTCInfo = true;\n    this._supportsCosmosInfo = false;\n    this._supportsRippleInfo = true;\n    this._supportsBinanceInfo = true;\n    this._supportsEosInfo = true;\n    this._supportsFioInfo = false;\n    this._isKeepKey = true;\n    this._supportsETH = true;\n    this._supportsBTC = true;\n    this._supportsCosmos = false;\n    this._supportsRipple = true;\n    this._supportsBinance = true;\n    this._supportsEos = true;\n    this._supportsFio = false;\n    this._supportsThorchainInfo = true;\n    this._supportsThorchain = true;\n    this._supportsSecretInfo = false;\n    this._supportsSecret = false;\n    this._supportsKava = false;\n    this._supportsKavaInfo = false;\n    this._supportsTerra = false;\n    this._supportsTerraInfo = false;\n    this.transport = transport;\n    this._supportsDebugLink = transport.debugLink;\n    this.info = new KeepKeyHDWalletInfo();\n  }\n\n  static create(transport) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new KeepKeyHDWallet(transport);\n    });\n  }\n\n  getDeviceID() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const featuresId = (yield this.getFeatures(\n      /*cached=*/\n      true)).deviceId; // Some devices are showing up with empty string deviceId's in their\n      // features object. Not sure how that's happening.\n\n      if (featuresId) return featuresId; // Grabbing the one from the transport seems to be a reasonable fallback.\n\n      return yield this.transport.getDeviceID();\n    });\n  }\n\n  getVendor() {\n    return \"KeepKey\";\n  }\n\n  getModel() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return core.mustBeDefined((yield this.getFeatures(\n      /*cached=*/\n      true)).model);\n    });\n  }\n\n  getFirmwareVersion() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const features = yield this.getFeatures(\n      /*cached=*/\n      true);\n      return `v${features.majorVersion}.${features.minorVersion}.${features.patchVersion}`;\n    });\n  }\n\n  getLabel() {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      return (_a = (yield this.getFeatures(\n      /*cached=*/\n      true)).label) !== null && _a !== void 0 ? _a : \"\";\n    });\n  }\n\n  isInitialized() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return !!(yield this.getFeatures()).initialized;\n    });\n  }\n\n  isLocked() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const features = yield this.getFeatures();\n      if (features.pinProtection && !features.pinCached) return true;\n      if (features.passphraseProtection && !features.passphraseCached) return true;\n      return false;\n    });\n  }\n\n  getPublicKeys(getPublicKeys) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const publicKeys = [];\n\n      for (let i = 0; i < getPublicKeys.length; i++) {\n        const {\n          coin,\n          addressNList,\n          curve,\n          showDisplay,\n          scriptType\n        } = getPublicKeys[i];\n        const GPK = new Messages.GetPublicKey();\n        if (coin) GPK.setCoinName(coin);\n        GPK.setAddressNList(addressNList);\n        GPK.setShowDisplay(showDisplay || false);\n        GPK.setEcdsaCurveName(curve || \"secp256k1\");\n        GPK.setScriptType(utils_1.translateInputScriptType(scriptType || core.BTCInputScriptType.SpendAddress));\n        const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETPUBLICKEY, GPK, {\n          msgTimeout: showDisplay ? core.LONG_TIMEOUT : core.DEFAULT_TIMEOUT\n        });\n        const publicKey = event.proto;\n        publicKeys.push({\n          xpub: core.mustBeDefined(publicKey.getXpub())\n        });\n      }\n\n      return publicKeys;\n    });\n  }\n\n  ping(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const ping = new Messages.Ping();\n      ping.setMessage(msg.msg);\n      ping.setButtonProtection(msg.button || false);\n      ping.setPinProtection(msg.pin || false);\n      ping.setPassphraseProtection(msg.passphrase || false);\n      const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_PING, ping, {\n        msgTimeout: msg.button || msg.pin || msg.passphrase ? core.LONG_TIMEOUT : core.DEFAULT_TIMEOUT\n      });\n      const message = event.proto;\n      return {\n        msg: core.mustBeDefined(message.getMessage())\n      };\n    });\n  }\n\n  reset(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resetDevice = new Messages.ResetDevice();\n      resetDevice.setStrength(msg.entropy || 128);\n      resetDevice.setDisplayRandom(false);\n      resetDevice.setPassphraseProtection(msg.passphrase || false);\n      resetDevice.setPinProtection(msg.pin || false);\n      resetDevice.setLabel(msg.label);\n\n      if (msg.autoLockDelayMs) {\n        resetDevice.setAutoLockDelayMs(msg.autoLockDelayMs);\n      }\n\n      resetDevice.setU2fCounter(msg.u2fCounter || Math.floor(+new Date() / 1000)); // resetDevice.setWordsPerGape(wordsPerScreen) // Re-enable when patch gets in\n      // Send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_RESETDEVICE, resetDevice, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n      this.cacheFeatures(undefined);\n    });\n  }\n\n  recover(r) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const msg = new Messages.RecoveryDevice();\n      msg.setWordCount({\n        128: 12,\n        192: 18,\n        256: 24\n      }[r.entropy]);\n      msg.setPassphraseProtection(r.passphrase);\n      msg.setPinProtection(r.pin);\n      msg.setLabel(r.label);\n      msg.setLanguage(r.language || \"english\");\n      msg.setEnforceWordlist(true);\n      msg.setUseCharacterCipher(true);\n\n      if (r.autoLockDelayMs) {\n        msg.setAutoLockDelayMs(r.autoLockDelayMs);\n      }\n\n      msg.setU2fCounter(r.u2fCounter || Math.floor(+new Date() / 1000));\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_RECOVERYDEVICE, msg, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n      this.cacheFeatures(undefined);\n    });\n  }\n\n  pressYes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.press(true);\n    });\n  }\n\n  pressNo() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.press(false);\n    });\n  }\n\n  press(isYes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let decision = new Messages.DebugLinkDecision();\n      decision.setYesNo(isYes);\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_DEBUGLINKDECISION, decision, {\n        noWait: true,\n        debugLink: true\n      });\n    });\n  }\n\n  hasOnDevicePinEntry() {\n    return false;\n  }\n\n  hasOnDevicePassphrase() {\n    return false;\n  }\n\n  hasOnDeviceDisplay() {\n    return true;\n  }\n\n  hasOnDeviceRecovery() {\n    return false;\n  }\n\n  hasNativeShapeShift(srcCoin, dstCoin) {\n    return true;\n  }\n\n  supportsOfflineSigning() {\n    return true;\n  }\n\n  supportsBroadcast() {\n    return false;\n  }\n\n  sendPin(pin) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const matrixAck = new Messages.PinMatrixAck();\n      matrixAck.setPin(pin);\n      console.assert(undefined === (yield this.transport.call(Messages.MessageType.MESSAGETYPE_PINMATRIXACK, matrixAck, {\n        msgTimeout: core.DEFAULT_TIMEOUT,\n        omitLock: true,\n        noWait: true\n      })));\n    });\n  }\n\n  sendPassphrase(passphrase) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const passphraseAck = new Messages.PassphraseAck();\n      passphraseAck.setPassphrase(passphrase);\n      console.assert(undefined === (yield this.transport.call(Messages.MessageType.MESSAGETYPE_PASSPHRASEACK, passphraseAck, {\n        msgTimeout: core.DEFAULT_TIMEOUT,\n        omitLock: true,\n        noWait: true\n      })));\n    });\n  }\n\n  sendCharacter(character) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.sendCharacterProto(character, false, false);\n    });\n  }\n\n  sendCharacterDelete() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.sendCharacterProto(\"\", true, false);\n    });\n  }\n\n  sendCharacterDone() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.sendCharacterProto(\"\", false, true);\n    });\n  }\n\n  sendWord(word) {\n    return __awaiter(this, void 0, void 0, function* () {\n      throw new Error(\"Not Yet Implemented :(\");\n    });\n  }\n\n  sendCharacterProto(character, _delete, _done) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const characterAck = new Messages.CharacterAck();\n\n      if (character !== \"\") {\n        characterAck.setCharacter(character);\n      } else if (_delete) {\n        characterAck.setDelete(_delete);\n      } else if (_done) {\n        characterAck.setDone(_done);\n      }\n\n      console.assert(undefined === (yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHARACTERACK, characterAck, {\n        msgTimeout: core.DEFAULT_TIMEOUT,\n        omitLock: true,\n        noWait: true\n      })));\n    });\n  } // ApplyPolicy enables or disables a named policy such as \"ShapeShift\" on the device\n\n\n  applyPolicy(p) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const policy = new Types.PolicyType();\n      policy.setPolicyName(p.policyName);\n      policy.setEnabled(p.enabled);\n      const applyPolicies = new Messages.ApplyPolicies();\n      applyPolicies.setPolicyList([policy]);\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_APPLYPOLICIES, applyPolicies, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n      this.cacheFeatures(undefined);\n    });\n  } // ApplySettings changes the label, language, and enabling/disabling the passphrase\n  // The default language is english\n\n\n  applySettings(s) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const applySettings = new Messages.ApplySettings();\n\n      if (s.label) {\n        applySettings.setLabel(s.label);\n      }\n\n      if (s.language) {\n        applySettings.setLanguage(s.language);\n      }\n\n      if (s.usePassphrase !== undefined) {\n        applySettings.setUsePassphrase(s.usePassphrase);\n      }\n\n      if (s.autoLockDelayMs) {\n        applySettings.setAutoLockDelayMs(s.autoLockDelayMs);\n      }\n\n      if (s.u2fCounter) {\n        applySettings.setU2fCounter(s.u2fCounter);\n      }\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_APPLYSETTINGS, applySettings);\n      this.cacheFeatures(undefined);\n    });\n  } // Cancel aborts the last device action that required user interaction\n  // It can follow a button request, passphrase request, or pin request\n\n\n  cancel() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.transport.cancel();\n    });\n  } // ChangePin requests setting/changing the pin\n\n\n  changePin() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const changePin = new Messages.ChangePin(); // User may be propmpted for button press up to 2 times\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHANGEPIN, changePin, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n    });\n  } // CipherKeyValue encrypts or decrypts a value with a given key, nodepath, and initializationVector\n  // This method encrypts if encrypt is true and decrypts if false, the confirm paramater determines wether\n  // the user is prompted on the device. See EncryptKeyValue() and DecryptKeyValue() for convenience methods\n  // NOTE: If the length of the value in bytes is not divisible by 16 it will be zero padded\n\n\n  cipherKeyValue(v) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // if(val.length % 16 !== 0) val = val.concat() TODO THIS\n      const cipherKeyValue = new Messages.CipherKeyValue();\n      cipherKeyValue.setAddressNList(v.addressNList);\n      cipherKeyValue.setKey(v.key);\n      cipherKeyValue.setValue(v.value);\n      cipherKeyValue.setEncrypt(!!v.encrypt);\n      cipherKeyValue.setAskOnEncrypt(v.askOnEncrypt || false);\n      cipherKeyValue.setAskOnDecrypt(v.askOnDecrypt || false);\n      cipherKeyValue.setIv(v.iv || \"\");\n      const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_CIPHERKEYVALUE, cipherKeyValue);\n      const ckv = response.message;\n      return ckv.getValue();\n    });\n  } // ClearSession clears cached session values such as the pin and passphrase\n\n\n  clearSession() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const clearSession = new Messages.ClearSession();\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_CLEARSESSION, clearSession);\n      this.cacheFeatures(undefined);\n    });\n  } // DecryptKeyValue is a convenience method around decrypting with CipherKeyValue().\n  // For more granular control of the process use CipherKeyValue()\n\n\n  decryptKeyValue(v) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.cipherKeyValue(v);\n    });\n  } // FirmwareErase askes the device to erase its firmware\n\n\n  firmwareErase() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const firmwareErase = new Messages.FirmwareErase(); // send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_FIRMWAREERASE, firmwareErase);\n      this.cacheFeatures(undefined);\n    });\n  }\n\n  firmwareUpload(firmware) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const firmwareUpload = new Messages.FirmwareUpload();\n      const hash = yield this.transport.getFirmwareHash(firmware);\n      firmwareUpload.setPayload(firmware);\n      firmwareUpload.setPayloadHash(hash);\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_FIRMWAREUPLOAD, firmwareUpload);\n      this.cacheFeatures(undefined);\n    });\n  } // Initialize assigns a hid connection to this KeepKey and send initialize message to device\n\n\n  initialize() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const initialize = new Messages.Initialize();\n      const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_INITIALIZE, initialize);\n      if (!event.message) throw event;\n      const out = event.message;\n      if (!out.deviceId) throw new Error(\"no deviceId in features object\");\n      this.features = out; // v6.1.0 firmware changed usb serial numbers to match STM32 desig_device_id\n      // If the deviceId in the features table doesn't match, then we need to\n      // add another k-v pair to the keyring so it can be looked up either way.\n\n      const transportDeviceID = yield this.transport.getDeviceID();\n\n      if (transportDeviceID !== out.deviceId) {\n        this.transport.keyring.addAlias(transportDeviceID, out.deviceId);\n      } // Cosmos isn't supported until v6.3.0\n\n\n      const fwVersion = `v${out.majorVersion}.${out.minorVersion}.${out.patchVersion}`; //Lost Support per proto 44.3\n      //this._supportsCosmos = semver.gte(fwVersion, \"v6.3.0\");\n\n      this._supportsRipple = semver_1.default.gte(fwVersion, \"v6.4.0\");\n      this._supportsBinance = semver_1.default.gte(fwVersion, \"v6.4.0\");\n      this._supportsEos = semver_1.default.gte(fwVersion, \"v6.4.0\"); // this._supportsThorchain = Semver.get(fwVersion, \"v7.0.0\");\n\n      this.cacheFeatures(out);\n      return out;\n    });\n  } // GetFeatures returns the features and other device information such as the version, label, and supported coins\n\n\n  getFeatures() {\n    let cached = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (cached && this.featuresCache) return this.featuresCache;\n      const features = new Messages.GetFeatures();\n      const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETFEATURES, features);\n      this.cacheFeatures(event.message);\n      return event.message;\n    });\n  }\n\n  cacheFeatures(features) {\n    this.featuresCache = features;\n  } // GetEntropy requests sample data from the hardware RNG\n\n\n  getEntropy(size) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const getEntropy = new Messages.GetEntropy();\n      getEntropy.setSize(size); // send\n\n      const event = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETENTROPY, getEntropy, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n      return core.mustBeDefined(event.proto).getEntropy_asU8();\n    });\n  } // GetNumCoins returns the number of coins supported by the device regardless of if the hanve funds.\n\n\n  getNumCoins() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const getCoinTable = new Messages.GetCoinTable();\n      const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETCOINTABLE, getCoinTable);\n      return core.mustBeDefined(core.mustBeDefined(response.proto).getNumCoins());\n    });\n  } // GetCoinTable returns an array of Types.CoinTypes, with start and end arguments for paging.\n  // You cannot request more than 10 at a time.\n\n\n  getCoinTable() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start + 10;\n    return __awaiter(this, void 0, void 0, function* () {\n      const getCoinTable = new Messages.GetCoinTable();\n      getCoinTable.setStart(start);\n      getCoinTable.setEnd(end);\n      const response = yield this.transport.call(Messages.MessageType.MESSAGETYPE_GETCOINTABLE, getCoinTable);\n      const coinTable = response.message;\n      return coinTable.tableList;\n    });\n  } // LoadDevice loads a provided seed onto the device and applies the provided settings\n  // including setting a pin/device label, enabling/disabling the passphrase, and whether to\n  // check the checksum of the provided mnemonic\n\n\n  loadDevice(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const loadDevice = new Messages.LoadDevice();\n      loadDevice.setMnemonic(msg.mnemonic);\n      loadDevice.setPassphraseProtection(!!msg.passphrase);\n      loadDevice.setSkipChecksum(!!msg.skipChecksum);\n      if (msg.pin) loadDevice.setPin(msg.pin);\n      if (msg.label) loadDevice.setLabel(msg.label); // send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_LOADDEVICE, loadDevice, {\n        msgTimeout: core.LONG_TIMEOUT\n      });\n      this.cacheFeatures(undefined);\n    });\n  } // RemovePin disables pin protection for the device. If a pin is currently enabled\n  // it will prompt the user to enter the current pin\n\n\n  removePin() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const changePin = new Messages.ChangePin();\n      changePin.setRemove(true); // send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_CHANGEPIN, changePin);\n      this.cacheFeatures(undefined);\n    });\n  }\n\n  send(events) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (const event of events) {\n        const MessageType = typeRegistry_1.messageTypeRegistry[core.mustBeDefined(event.message_enum)];\n        const msg = new MessageType();\n        Object.entries(event.message).forEach(_ref => {\n          let [key, value] = _ref;\n          const setterMethod = utils_1.protoFieldToSetMethod(key);\n\n          if (msg[setterMethod]) {\n            // Assume setter methods are always of the format: strength -> setStrength\n            // until this exists https://github.com/protocolbuffers/protobuf/issues/1591\n            msg[setterMethod](value);\n          }\n        });\n        yield this.transport.call(core.mustBeDefined(event.message_enum), msg);\n      }\n    });\n  } // SoftReset power cycles the device. The device only responds to\n  // this message while in manufacturer mode\n\n\n  softReset() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const softReset = new Messages.SoftReset(); // send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_SOFTRESET, softReset);\n      this.cacheFeatures(undefined);\n    });\n  } // WipeDevice wipes all sensitive data and settings\n\n\n  wipe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const wipeDevice = new Messages.WipeDevice(); // send\n\n      yield this.transport.call(Messages.MessageType.MESSAGETYPE_WIPEDEVICE, wipeDevice);\n      this.cacheFeatures(undefined);\n    });\n  }\n\n  btcSupportsCoin(coin) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.info.btcSupportsCoin(coin);\n    });\n  }\n\n  btcSupportsScriptType(coin, scriptType) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.info.btcSupportsScriptType(coin, scriptType);\n    });\n  }\n\n  btcGetAddress(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcGetAddress(this, this.transport, msg);\n    });\n  }\n\n  btcSignTx(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcSignTx(this, this.transport, msg);\n    });\n  }\n\n  btcSupportsSecureTransfer() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.info.btcSupportsSecureTransfer();\n    });\n  }\n\n  btcSupportsNativeShapeShift() {\n    return this.info.btcSupportsNativeShapeShift();\n  }\n\n  ethSupportsEIP1559() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // EIP1559 support starts in v7.2.1\n      return semver_1.default.gte(yield this.getFirmwareVersion(), \"v7.2.1\");\n    });\n  }\n\n  btcSignMessage(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcSignMessage(this, this.transport, msg);\n    });\n  }\n\n  btcVerifyMessage(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Btc.btcVerifyMessage(this, this.transport, msg);\n    });\n  }\n\n  btcGetAccountPaths(msg) {\n    return this.info.btcGetAccountPaths(msg);\n  }\n\n  btcIsSameAccount(msg) {\n    // TODO: mixed-mode segwit was added in v6.0.2\n    // https://github.com/keepkey/keepkey-firmware/pull/81\n    // if (firmware_version.lt('6.0.2') && msg.length > 1)\n    //  return false\n    return this.info.btcIsSameAccount(msg);\n  }\n\n  ethSignTx(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethSignTx(this.transport, msg);\n    });\n  }\n\n  ethGetAddress(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethGetAddress(this.transport, msg);\n    });\n  }\n\n  ethSignMessage(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethSignMessage(this.transport, msg);\n    });\n  }\n\n  ethVerifyMessage(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Eth.ethVerifyMessage(this.transport, msg);\n    });\n  }\n\n  ethSupportsNetwork(chain_id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.info.ethSupportsNetwork(chain_id);\n    });\n  }\n\n  ethSupportsSecureTransfer() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.info.ethSupportsSecureTransfer();\n    });\n  }\n\n  ethSupportsNativeShapeShift() {\n    return this.info.ethSupportsNativeShapeShift();\n  }\n\n  ethGetAccountPaths(msg) {\n    return this.info.ethGetAccountPaths(msg);\n  }\n\n  rippleGetAccountPaths(msg) {\n    return this.info.rippleGetAccountPaths(msg);\n  }\n\n  rippleGetAddress(msg) {\n    return Ripple.rippleGetAddress(this.transport, msg);\n  }\n\n  rippleSignTx(msg) {\n    return Ripple.rippleSignTx(this.transport, msg);\n  }\n\n  cosmosGetAccountPaths(msg) {\n    return this.info.cosmosGetAccountPaths(msg);\n  }\n\n  cosmosGetAddress(msg) {\n    return Cosmos.cosmosGetAddress(this.transport, msg);\n  }\n\n  cosmosSignTx(msg) {\n    return Cosmos.cosmosSignTx(this.transport, msg);\n  }\n\n  thorchainGetAccountPaths(msg) {\n    return this.info.thorchainGetAccountPaths(msg);\n  }\n\n  thorchainGetAddress(msg) {\n    return Thorchain.thorchainGetAddress(this.transport, msg);\n  }\n\n  thorchainSignTx(msg) {\n    return Thorchain.thorchainSignTx(this.transport, msg);\n  }\n\n  binanceGetAccountPaths(msg) {\n    return this.info.binanceGetAccountPaths(msg);\n  }\n\n  binanceGetAddress(msg) {\n    return Binance.binanceGetAddress(this.transport, msg);\n  }\n\n  binanceSignTx(msg) {\n    return Binance.binanceSignTx(this.transport, msg);\n  }\n\n  eosGetAccountPaths(msg) {\n    return this.info.eosGetAccountPaths(msg);\n  }\n\n  eosGetPublicKey(msg) {\n    return Eos.eosGetPublicKey(this.transport, msg);\n  }\n\n  eosSignTx(msg) {\n    return Eos.eosSignTx(this.transport, msg);\n  }\n\n  describePath(msg) {\n    return this.info.describePath(msg);\n  }\n\n  disconnect() {\n    return this.transport.disconnect();\n  }\n\n  btcNextAccountPath(msg) {\n    return this.info.btcNextAccountPath(msg);\n  }\n\n  ethNextAccountPath(msg) {\n    return this.info.ethNextAccountPath(msg);\n  }\n\n  eosNextAccountPath(msg) {\n    return this.info.eosNextAccountPath(msg);\n  }\n\n  cosmosNextAccountPath(msg) {\n    return this.info.cosmosNextAccountPath(msg);\n  }\n\n  rippleNextAccountPath(msg) {\n    return this.info.rippleNextAccountPath(msg);\n  }\n\n  binanceNextAccountPath(msg) {\n    return this.info.binanceNextAccountPath(msg);\n  }\n\n}\n\nexports.KeepKeyHDWallet = KeepKeyHDWallet;\n\nfunction info() {\n  return new KeepKeyHDWalletInfo();\n}\n\nexports.info = info;\n\nfunction create(transport) {\n  return new KeepKeyHDWallet(transport);\n}\n\nexports.create = create;","map":{"version":3,"mappings":"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","names":["isKeepKey","wallet","lodash_1","isObject","_isKeepKey","exports","describeETHPath","path","pathStr","core","addressNListToBIP32","unknown","verbose","coin","isKnown","length","slip44ByCoin","index","accountIdx","wholeAccount","isPrefork","describeUTXOPath","scriptType","Btc","btcSupportsCoin","btcSupportsScriptType","purpose","includes","BTCInputScriptType","SpendAddress","SpendP2SHWitness","SpendWitness","script","_a","slip44","undefined","attributes","concat","attr","join","change","addressIdx","isChange","describeCosmosPath","describeThorchainPath","describeEosPath","describeRipplePath","describeBinancePath","KeepKeyHDWalletInfo","constructor","getVendor","btcSupportsSecureTransfer","btcSupportsNativeShapeShift","btcGetAccountPaths","msg","btcIsSameAccount","ethSupportsNetwork","chain_id","Eth","ethSupportsSecureTransfer","ethSupportsNativeShapeShift","ethSupportsEIP1559","ethGetAccountPaths","cosmosGetAccountPaths","Cosmos","thorchainGetAccountPaths","Thorchain","rippleGetAccountPaths","Ripple","binanceGetAccountPaths","Binance","eosGetAccountPaths","Eos","hasOnDevicePinEntry","hasOnDevicePassphrase","hasOnDeviceDisplay","hasOnDeviceRecovery","hasNativeShapeShift","srcCoin","dstCoin","supportsOfflineSigning","supportsBroadcast","describePath","btcNextAccountPath","description","addressNList","ethNextAccountPath","hardenedPath","relPath","relativePath","cosmosNextAccountPath","thorchainNextAccountPath","rippleNextAccountPath","binanceNextAccountPath","eosNextAccountPath","KeepKeyHDWallet","transport","_supportsDebugLink","debugLink","info","create","getDeviceID","featuresId","getFeatures","deviceId","getModel","mustBeDefined","model","getFirmwareVersion","features","majorVersion","minorVersion","patchVersion","getLabel","label","isInitialized","initialized","isLocked","pinProtection","pinCached","passphraseProtection","passphraseCached","getPublicKeys","publicKeys","i","curve","showDisplay","GPK","Messages","GetPublicKey","setCoinName","setAddressNList","setShowDisplay","setEcdsaCurveName","setScriptType","utils_1","event","call","MessageType","MESSAGETYPE_GETPUBLICKEY","msgTimeout","LONG_TIMEOUT","DEFAULT_TIMEOUT","publicKey","proto","push","xpub","getXpub","ping","Ping","setMessage","setButtonProtection","button","setPinProtection","pin","setPassphraseProtection","passphrase","MESSAGETYPE_PING","message","getMessage","reset","resetDevice","ResetDevice","setStrength","entropy","setDisplayRandom","setLabel","autoLockDelayMs","setAutoLockDelayMs","setU2fCounter","u2fCounter","Math","floor","Date","MESSAGETYPE_RESETDEVICE","cacheFeatures","recover","r","RecoveryDevice","setWordCount","setLanguage","language","setEnforceWordlist","setUseCharacterCipher","MESSAGETYPE_RECOVERYDEVICE","pressYes","press","pressNo","isYes","decision","DebugLinkDecision","setYesNo","MESSAGETYPE_DEBUGLINKDECISION","noWait","sendPin","matrixAck","PinMatrixAck","setPin","console","assert","MESSAGETYPE_PINMATRIXACK","omitLock","sendPassphrase","passphraseAck","PassphraseAck","setPassphrase","MESSAGETYPE_PASSPHRASEACK","sendCharacter","character","sendCharacterProto","sendCharacterDelete","sendCharacterDone","sendWord","word","Error","_delete","_done","characterAck","CharacterAck","setCharacter","setDelete","setDone","MESSAGETYPE_CHARACTERACK","applyPolicy","p","policy","Types","PolicyType","setPolicyName","policyName","setEnabled","enabled","applyPolicies","ApplyPolicies","setPolicyList","MESSAGETYPE_APPLYPOLICIES","applySettings","s","ApplySettings","usePassphrase","setUsePassphrase","MESSAGETYPE_APPLYSETTINGS","cancel","changePin","ChangePin","MESSAGETYPE_CHANGEPIN","cipherKeyValue","v","CipherKeyValue","setKey","key","setValue","value","setEncrypt","encrypt","setAskOnEncrypt","askOnEncrypt","setAskOnDecrypt","askOnDecrypt","setIv","iv","response","MESSAGETYPE_CIPHERKEYVALUE","ckv","getValue","clearSession","ClearSession","MESSAGETYPE_CLEARSESSION","decryptKeyValue","firmwareErase","FirmwareErase","MESSAGETYPE_FIRMWAREERASE","firmwareUpload","firmware","FirmwareUpload","hash","getFirmwareHash","setPayload","setPayloadHash","MESSAGETYPE_FIRMWAREUPLOAD","initialize","Initialize","MESSAGETYPE_INITIALIZE","out","transportDeviceID","keyring","addAlias","fwVersion","_supportsRipple","semver_1","gte","_supportsBinance","_supportsEos","cached","featuresCache","GetFeatures","MESSAGETYPE_GETFEATURES","getEntropy","size","GetEntropy","setSize","MESSAGETYPE_GETENTROPY","getEntropy_asU8","getNumCoins","getCoinTable","GetCoinTable","MESSAGETYPE_GETCOINTABLE","start","end","setStart","setEnd","coinTable","tableList","loadDevice","LoadDevice","setMnemonic","mnemonic","setSkipChecksum","skipChecksum","MESSAGETYPE_LOADDEVICE","removePin","setRemove","send","events","typeRegistry_1","message_enum","Object","entries","forEach","setterMethod","softReset","SoftReset","MESSAGETYPE_SOFTRESET","wipe","wipeDevice","WipeDevice","MESSAGETYPE_WIPEDEVICE","btcGetAddress","btcSignTx","btcSignMessage","btcVerifyMessage","ethSignTx","ethGetAddress","ethSignMessage","ethVerifyMessage","rippleGetAddress","rippleSignTx","cosmosGetAddress","cosmosSignTx","thorchainGetAddress","thorchainSignTx","binanceGetAddress","binanceSignTx","eosGetPublicKey","eosSignTx","disconnect"],"sourceRoot":"","sources":["../src/keepkey.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}