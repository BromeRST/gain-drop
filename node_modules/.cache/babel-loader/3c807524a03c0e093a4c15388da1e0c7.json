{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnimatedQRCodeReader = void 0;\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst react_qr_reader_1 = __importDefault(require(\"react-qr-reader\"));\n\nconst bc_ur_1 = require(\"@cvbb/bc-ur\");\n\nconst events_1 = require(\"events\");\n\nconst Button_1 = require(\"../components/Button\");\n\nconst Progress_1 = require(\"../components/Progress\");\n\nconst ButtonGroup_1 = require(\"../components/ButtonGroup\");\n\nconst useAnimatedQRCodeReader = () => {\n  const [urCodes, setURCodes] = react_1.useState([]);\n  const [error, setError] = react_1.useState('');\n  const ee = react_1.useMemo(() => new events_1.EventEmitter(), []);\n  const [title, setTitle] = react_1.useState(null);\n  const [description, setDescription] = react_1.useState(null);\n\n  const reset = () => {\n    setURCodes([]);\n    setError('');\n  };\n\n  const processQRCode = qr => {\n    try {\n      processJSON(qr);\n    } catch (e1) {\n      try {\n        processUR(qr);\n      } catch (e2) {\n        processText(qr);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    ee.emit('read', {\n      type: 'none',\n      result: ''\n    });\n  };\n\n  const handleRetry = () => {\n    reset();\n  };\n\n  const processJSON = data => {\n    JSON.parse(data);\n    ee.emit('read', {\n      type: 'json',\n      result: data\n    });\n  };\n\n  const processText = data => {\n    ee.emit('read', {\n      type: 'text',\n      result: data\n    });\n  };\n\n  const processUR = ur => {\n    try {\n      const [index, total] = bc_ur_1.extractSingleWorkload(ur);\n\n      if (urCodes.length > 0) {\n        const currentTotal = urCodes[0].total;\n\n        if (total !== currentTotal) {\n          setError('invalid animated qrcode: mismatching qrs, please retry');\n        }\n      }\n\n      if (!urCodes.find(item => item.index === index)) {\n        const newCodes = [...urCodes, {\n          index,\n          total,\n          data: ur\n        }];\n        setURCodes(newCodes);\n\n        if (newCodes.length === total) {\n          const result = bc_ur_1.decodeUR(newCodes.map(item => item.data));\n          ee.emit('read', {\n            type: 'ur',\n            result\n          });\n        }\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  const element = react_1.default.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  }, title && react_1.default.createElement(\"p\", null, title), description && react_1.default.createElement(\"p\", null, description), react_1.default.createElement(react_qr_reader_1.default, {\n    onScan: data => {\n      if (data) {\n        processQRCode(data);\n      }\n    },\n    delay: 100,\n    style: {\n      width: '100%'\n    },\n    onError: e => {\n      setError(e.message);\n    }\n  }), react_1.default.createElement(\"p\", null, urCodes[0] && urCodes[0].total > 1 && react_1.default.createElement(Progress_1.Progress, {\n    progress: urCodes.length,\n    total: urCodes[0].total\n  })), react_1.default.createElement(ButtonGroup_1.ButtonGroup, null, react_1.default.createElement(Button_1.Button, {\n    onClick: handleStop\n  }, \"Close\"), error && react_1.default.createElement(Button_1.Button, {\n    onClick: handleRetry\n  }, \"Retry\")), error && react_1.default.createElement(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, error));\n  return [element, {\n    read: options => {\n      return new Promise(resolve => {\n        console.log(options);\n\n        if (options) {\n          options.title && setTitle(options.title);\n          options.description && setDescription(options.description);\n        }\n\n        ee.once('read', result => {\n          reset();\n          resolve(result);\n        });\n      });\n    }\n  }];\n};\n\nexports.useAnimatedQRCodeReader = useAnimatedQRCodeReader;","map":{"version":3,"mappings":"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","names":["useAnimatedQRCodeReader","urCodes","setURCodes","react_1","error","setError","ee","events_1","title","setTitle","description","setDescription","reset","processQRCode","qr","processJSON","e1","processUR","e2","processText","handleStop","emit","type","result","handleRetry","data","JSON","parse","ur","index","total","bc_ur_1","length","currentTotal","find","item","newCodes","map","e","message","element","style","display","flexDirection","alignItems","react_qr_reader_1","onScan","delay","width","onError","Progress_1","progress","ButtonGroup_1","Button_1","onClick","color","read","options","Promise","resolve","console","log","once","exports"],"sourceRoot":"","sources":["../../lib/hooks/useAnimatedQRCodeReader.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}