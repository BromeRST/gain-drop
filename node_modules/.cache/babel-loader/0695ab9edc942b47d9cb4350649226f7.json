{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.describeETHPath = exports.ETHTransactionType = void 0;\n\nconst utils_1 = require(\"./utils\");\n\nvar ETHTransactionType;\n\n(function (ETHTransactionType) {\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_LEGACY\"] = 0] = \"ETH_TX_TYPE_LEGACY\";\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_2930\"] = 1] = \"ETH_TX_TYPE_EIP_2930\";\n  ETHTransactionType[ETHTransactionType[\"ETH_TX_TYPE_EIP_1559\"] = 2] = \"ETH_TX_TYPE_EIP_1559\";\n})(ETHTransactionType = exports.ETHTransactionType || (exports.ETHTransactionType = {}));\n\nfunction describeETHPath(path) {\n  let pathStr = utils_1.addressNListToBIP32(path);\n  let unknown = {\n    verbose: pathStr,\n    coin: \"Ethereum\",\n    isKnown: false\n  };\n  if (path.length !== 5) return unknown;\n  if (path[0] !== 0x80000000 + 44) return unknown;\n  if (path[1] !== 0x80000000 + utils_1.slip44ByCoin(\"Ethereum\")) return unknown;\n  if ((path[2] & 0x80000000) >>> 0 !== 0x80000000) return unknown;\n  if (path[3] !== 0) return unknown;\n  if (path[4] !== 0) return unknown;\n  let index = path[2] & 0x7fffffff;\n  return {\n    verbose: `Ethereum Account #${index}`,\n    accountIdx: index,\n    wholeAccount: true,\n    coin: \"Ethereum\",\n    isKnown: true,\n    isPrefork: false\n  };\n}\n\nexports.describeETHPath = describeETHPath;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA,IAAYA,kBAAZ;;AAAA,WAAYA,kBAAZ,EAA8B;AAC5BA;AACAA;AACAA;AACD,CAJD,EAAYA,kBAAkB,GAAlBC,4DAAkB,EAAlB,CAAZ;;AA4IA,SAAgBC,eAAhB,CAAgCC,IAAhC,EAA+C;AAC7C,MAAIC,OAAO,GAAGC,4BAAoBF,IAApB,CAAd;AACA,MAAIG,OAAO,GAAoB;AAC7BC,WAAO,EAAEH,OADoB;AAE7BI,QAAI,EAAE,UAFuB;AAG7BC,WAAO,EAAE;AAHoB,GAA/B;AAMA,MAAIN,IAAI,CAACO,MAAL,KAAgB,CAApB,EAAuB,OAAOJ,OAAP;AAEvB,MAAIH,IAAI,CAAC,CAAD,CAAJ,KAAY,aAAa,EAA7B,EAAiC,OAAOG,OAAP;AAEjC,MAAIH,IAAI,CAAC,CAAD,CAAJ,KAAY,aAAaE,qBAAa,UAAb,CAA7B,EAAuD,OAAOC,OAAP;AAEvD,MAAI,CAACH,IAAI,CAAC,CAAD,CAAJ,GAAU,UAAX,MAA2B,CAA3B,KAAiC,UAArC,EAAiD,OAAOG,OAAP;AAEjD,MAAIH,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB,OAAOG,OAAP;AAEnB,MAAIH,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAhB,EAAmB,OAAOG,OAAP;AAEnB,MAAIK,KAAK,GAAGR,IAAI,CAAC,CAAD,CAAJ,GAAU,UAAtB;AACA,SAAO;AACLI,WAAO,EAAE,qBAAqBI,KAAK,EAD9B;AAELC,cAAU,EAAED,KAFP;AAGLE,gBAAY,EAAE,IAHT;AAILL,QAAI,EAAE,UAJD;AAKLC,WAAO,EAAE,IALJ;AAMLK,aAAS,EAAE;AANN,GAAP;AAQD;;AA7BDb","names":["ETHTransactionType","exports","describeETHPath","path","pathStr","utils_1","unknown","verbose","coin","isKnown","length","index","accountIdx","wholeAccount","isPrefork"],"sourceRoot":"","sources":["../src/ethereum.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}