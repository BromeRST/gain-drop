{"ast":null,"code":"import { NFTStorage, File } from 'nft.storage'; // import { Web3Storage } from 'web3.storage';\n\nrequire('dotenv').config();\n\nconst client = new NFTStorage({\n  token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDRFM2RBNjBiNjcxMDYxNGYzMjVFMGYyOUJiMTFFMzg2MWRlNzI4ZkQiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY0ODEwOTM1NzAxNCwibmFtZSI6ImxlbnMtaGFjayJ9.vw-HDVaJbS5QxXlfwSmZMb4XWCHy48TSsjHTli-a7PY\"\n}); // const client = new Web3Storage({ token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDYwNDRiQTU0MmQzQkE4NjM0QUEyNTA0MTZlYTM0MjY0ZWI4NjEyODUiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NDgzODc1MzYxMjUsIm5hbWUiOiJnYWluLWRyb3AifQ.AJyuqbtcbbq-efz4qMeqrbphyiOp5XddplSIksrL-9I\"})\n\nexport async function main(_name, _description, _nftImg, _trait1, _trai1Value, _trait2, _trait2Value) {\n  const metadata = await client.store({\n    name: `${_name}`,\n    description: `${_description}`,\n    image: new File([\n    /* data */\n    _nftImg], `${_name}.jpg`, {\n      type: 'image/jpg'\n    }),\n    attributes: [{\n      trait_type: `${_trait1}`,\n      value: `${_trai1Value}`\n    }, {\n      trait_type: `${_trait2}`,\n      value: `${_trait2Value}`\n    }]\n  });\n  console.log(metadata.url); // ipfs://bafyreib4pff766vhpbxbhjbqqnsh5emeznvujayjj4z2iu533cprgbz23m/metadata.json\n\n  return metadata.url;\n}","map":{"version":3,"sources":["/Users/massimilianoalbini/Documents/gain-drop/src/utils/nftStorageAPI.js"],"names":["NFTStorage","File","require","config","client","token","main","_name","_description","_nftImg","_trait1","_trai1Value","_trait2","_trait2Value","metadata","store","name","description","image","type","attributes","trait_type","value","console","log","url"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,aAAjC,C,CACA;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,MAAM,GAAG,IAAIJ,UAAJ,CAAe;AAAEK,EAAAA,KAAK,EAAE;AAAT,CAAf,CAAf,C,CACA;;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,YAA3B,EAAyCC,OAAzC,EAAkDC,OAAlD,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFC,YAAjF,EAA+F;AACpG,QAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACW,KAAP,CAAa;AAClCC,IAAAA,IAAI,EAAG,GAAET,KAAM,EADmB;AAElCU,IAAAA,WAAW,EAAG,GAAET,YAAa,EAFK;AAGlCU,IAAAA,KAAK,EAAE,IAAIjB,IAAJ,CACL;AACE;AACAQ,IAAAA,OAFF,CADK,EAKJ,GAAEF,KAAM,MALJ,EAML;AAAEY,MAAAA,IAAI,EAAE;AAAR,KANK,CAH2B;AAWlCC,IAAAA,UAAU,EAAE,CACR;AACEC,MAAAA,UAAU,EAAG,GAAEX,OAAQ,EADzB;AAEEY,MAAAA,KAAK,EAAG,GAAEX,WAAY;AAFxB,KADQ,EAKR;AACEU,MAAAA,UAAU,EAAG,GAAET,OAAQ,EADzB;AAEEU,MAAAA,KAAK,EAAG,GAAET,YAAa;AAFzB,KALQ;AAXsB,GAAb,CAAvB;AAuBAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,GAArB,EAxBoG,CAyBpG;;AACA,SAAOX,QAAQ,CAACW,GAAhB;AACD","sourcesContent":["import { NFTStorage, File } from 'nft.storage'\n// import { Web3Storage } from 'web3.storage';\nrequire('dotenv').config();\n\nconst client = new NFTStorage({ token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDRFM2RBNjBiNjcxMDYxNGYzMjVFMGYyOUJiMTFFMzg2MWRlNzI4ZkQiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY0ODEwOTM1NzAxNCwibmFtZSI6ImxlbnMtaGFjayJ9.vw-HDVaJbS5QxXlfwSmZMb4XWCHy48TSsjHTli-a7PY\" })\n// const client = new Web3Storage({ token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDYwNDRiQTU0MmQzQkE4NjM0QUEyNTA0MTZlYTM0MjY0ZWI4NjEyODUiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NDgzODc1MzYxMjUsIm5hbWUiOiJnYWluLWRyb3AifQ.AJyuqbtcbbq-efz4qMeqrbphyiOp5XddplSIksrL-9I\"})\n\nexport async function main(_name, _description, _nftImg, _trait1, _trai1Value, _trait2, _trait2Value) {\n  const metadata = await client.store({\n    name: `${_name}`,\n    description: `${_description}`,\n    image: new File(\n      [\n        /* data */\n        _nftImg,\n      ],\n      `${_name}.jpg`,\n      { type: 'image/jpg' }\n    ),\n    attributes: [\n        {\n          trait_type: `${_trait1}`,\n          value: `${_trai1Value}`\n        },\n        {\n          trait_type: `${_trait2}`,\n          value: `${_trait2Value}`\n        }\n    ]\n  })\n\n  console.log(metadata.url)\n  // ipfs://bafyreib4pff766vhpbxbhjbqqnsh5emeznvujayjj4z2iu533cprgbz23m/metadata.json\n  return metadata.url;\n}"]},"metadata":{},"sourceType":"module"}