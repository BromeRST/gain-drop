{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transport = void 0;\n\nconst eventemitter2 = __importStar(require(\"eventemitter2\"));\n\nclass Transport extends eventemitter2.EventEmitter2 {\n  constructor(keyring) {\n    super();\n    this.keyring = keyring;\n  }\n  /**\n   * Optional method to bootstrap connection to device\n   */\n\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  /**\n   * Optional function that gets called to clean up connection to device\n   */\n\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n\n}\n\nexports.Transport = Transport;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAIA,MAAsBA,SAAtB,SAAwCC,aAAa,CAACC,aAAtD,CAAmE;AAGjEC,cAAYC,OAAZ,EAA4B;AAC1B;AACA,SAAKA,OAAL,GAAeA,OAAf;AACD;AASD;;;;;AAGaC,SAAO;yDAAoB;AAAA;AAExC;;;;;AAGaC,YAAU;yDAAoB;AAAA;;AAvBsB;;AAAnEC","names":["Transport","eventemitter2","EventEmitter2","constructor","keyring","connect","disconnect","exports"],"sourceRoot":"","sources":["../src/transport.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}