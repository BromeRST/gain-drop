{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n// FIXME drop:\n\n\nimport { splitPath, foreach } from \"./utils\";\nimport { log } from \"@ledgerhq/logs\";\nimport { EthAppPleaseEnableContractData } from \"@ledgerhq/errors\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethers } from \"ethers\";\nimport { byContractAddressAndChainId } from \"./erc20\";\nimport { loadInfosForContractMethod } from \"./contracts\";\nvar starkQuantizationTypeMap = {\n  eth: 1,\n  erc20: 2,\n  erc721: 3,\n  erc20mintable: 4,\n  erc721mintable: 5\n};\n\nfunction hexBuffer(str) {\n  return Buffer.from(str.startsWith(\"0x\") ? str.slice(2) : str, \"hex\");\n}\n\nfunction maybeHexBuffer(str) {\n  if (!str) return null;\n  return hexBuffer(str);\n}\n\nvar remapTransactionRelatedErrors = function (e) {\n  if (e && e.statusCode === 0x6a80) {\n    return new EthAppPleaseEnableContractData(\"Please enable Contract data on the Ethereum app Settings\");\n  }\n\n  return e;\n};\n/**\n * Ethereum API\n *\n * @example\n * import Eth from \"@ledgerhq/hw-app-eth\";\n * const eth = new Eth(transport)\n */\n\n\nvar Eth =\n/** @class */\nfunction () {\n  function Eth(transport, scrambleKey, pluginsLoadConfig) {\n    if (scrambleKey === void 0) {\n      scrambleKey = \"w0w\";\n    }\n\n    if (pluginsLoadConfig === void 0) {\n      pluginsLoadConfig = {};\n    }\n\n    this.transport = transport;\n    this.pluginsLoadConfig = pluginsLoadConfig;\n    transport.decorateAppAPIMethods(this, [\"getAddress\", \"provideERC20TokenInformation\", \"signTransaction\", \"signPersonalMessage\", \"getAppConfiguration\", \"signEIP712HashedMessage\", \"starkGetPublicKey\", \"starkSignOrder\", \"starkSignOrder_v2\", \"starkSignTransfer\", \"starkSignTransfer_v2\", \"starkProvideQuantum\", \"starkProvideQuantum_v2\", \"starkUnsafeSign\", \"eth2GetPublicKey\", \"eth2SetWithdrawalIndex\", \"setExternalPlugin\"], scrambleKey);\n  }\n\n  Eth.prototype.setPluginsLoadConfig = function (pluginsLoadConfig) {\n    this.pluginsLoadConfig = pluginsLoadConfig;\n  };\n  /**\n   * get Ethereum address for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @option boolChaincode optionally enable or not the chaincode request\n   * @return an object with a publicKey, address and (optionally) chainCode\n   * @example\n   * eth.getAddress(\"44'/60'/0'/0/0\").then(o => o.address)\n   */\n\n\n  Eth.prototype.getAddress = function (path, boolDisplay, boolChaincode) {\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport.send(0xe0, 0x02, boolDisplay ? 0x01 : 0x00, boolChaincode ? 0x01 : 0x00, buffer).then(function (response) {\n      var publicKeyLength = response[0];\n      var addressLength = response[1 + publicKeyLength];\n      return {\n        publicKey: response.slice(1, 1 + publicKeyLength).toString(\"hex\"),\n        address: \"0x\" + response.slice(1 + publicKeyLength + 1, 1 + publicKeyLength + 1 + addressLength).toString(\"ascii\"),\n        chainCode: boolChaincode ? response.slice(1 + publicKeyLength + 1 + addressLength, 1 + publicKeyLength + 1 + addressLength + 32).toString(\"hex\") : undefined\n      };\n    });\n  };\n  /**\n   * This commands provides a trusted description of an ERC 20 token\n   * to associate a contract address with a ticker and number of decimals.\n   *\n   * It shall be run immediately before performing a transaction involving a contract\n   * calling this contract address to display the proper token information to the user if necessary.\n   *\n   * @param {*} info: a blob from \"erc20.js\" utilities that contains all token information.\n   *\n   * @example\n   * import { byContractAddressAndChainId } from \"@ledgerhq/hw-app-eth/erc20\"\n   * const zrxInfo = byContractAddressAndChainId(\"0xe41d2489571d322189246dafa5ebde1f4699f498\", chainId)\n   * if (zrxInfo) await appEth.provideERC20TokenInformation(zrxInfo)\n   * const signed = await appEth.signTransaction(path, rawTxHex)\n   */\n\n\n  Eth.prototype.provideERC20TokenInformation = function (_a) {\n    var data = _a.data;\n    return provideERC20TokenInformation(this.transport, data);\n  };\n  /**\n   * You can sign a transaction and retrieve v, r, s given the raw transaction and the BIP 32 path of the account to sign\n   * @example\n   eth.signTransaction(\"44'/60'/0'/0/0\", \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\").then(result => ...)\n   */\n\n\n  Eth.prototype.signTransaction = function (path, rawTxHex) {\n    return __awaiter(this, void 0, void 0, function () {\n      var paths, offset, rawTx, VALID_TYPES, txType, rlpData, toSend, response, rlpTx, vrsOffset, chainId, chainIdTruncated, rlpDecoded, decodedTx, rlpVrs, sizeOfListLen, chainIdSrc, chainIdTruncatedBuf, _loop_1, provideForContract, selector, infos, plugin, payload, signature, erc20OfInterest, abi, contract, args, erc20OfInterest_1, erc20OfInterest_1_1, address, e_1_1;\n\n      var e_1, _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            paths = splitPath(path);\n            offset = 0;\n            rawTx = Buffer.from(rawTxHex, \"hex\");\n            VALID_TYPES = [1, 2];\n            txType = VALID_TYPES.includes(rawTx[0]) ? rawTx[0] : null;\n            rlpData = txType === null ? rawTx : rawTx.slice(1, rawTxHex.length);\n            toSend = [];\n            rlpTx = ethers.utils.RLP.decode(rlpData).map(function (hex) {\n              return Buffer.from(hex.slice(2), \"hex\");\n            });\n            vrsOffset = 0;\n            chainId = new BigNumber(0);\n            chainIdTruncated = 0;\n            rlpDecoded = ethers.utils.RLP.decode(rlpData);\n\n            if (txType === 2) {\n              // EIP1559\n              decodedTx = {\n                data: rlpDecoded[7],\n                to: rlpDecoded[5],\n                chainId: rlpTx[0]\n              };\n            } else if (txType === 1) {\n              // EIP2930\n              decodedTx = {\n                data: rlpDecoded[6],\n                to: rlpDecoded[4],\n                chainId: rlpTx[0]\n              };\n            } else {\n              // Legacy tx\n              decodedTx = {\n                data: rlpDecoded[5],\n                to: rlpDecoded[3],\n                // Default to 1 for non EIP 155 txs\n                chainId: rlpTx.length > 6 ? rlpTx[6] : Buffer.from(\"0x01\", \"hex\")\n              };\n            }\n\n            if (txType === null && rlpTx.length > 6) {\n              rlpVrs = Buffer.from(ethers.utils.RLP.encode(rlpTx.slice(-3)).slice(2), \"hex\");\n              vrsOffset = rawTx.length - (rlpVrs.length - 1); // First byte > 0xf7 means the length of the list length doesn't fit in a single byte.\n\n              if (rlpVrs[0] > 0xf7) {\n                // Increment vrsOffset to account for that extra byte.\n                vrsOffset++;\n                sizeOfListLen = rlpVrs[0] - 0xf7; // Increase rlpOffset by the size of the list length.\n\n                vrsOffset += sizeOfListLen - 1;\n              }\n            }\n\n            chainIdSrc = decodedTx.chainId;\n\n            if (chainIdSrc) {\n              // Using BigNumber because chainID could be any uint256.\n              chainId = new BigNumber(chainIdSrc.toString(\"hex\"), 16);\n              chainIdTruncatedBuf = Buffer.alloc(4);\n\n              if (chainIdSrc.length > 4) {\n                chainIdSrc.copy(chainIdTruncatedBuf);\n              } else {\n                chainIdSrc.copy(chainIdTruncatedBuf, 4 - chainIdSrc.length);\n              }\n\n              chainIdTruncated = chainIdTruncatedBuf.readUInt32BE(0);\n            }\n\n            _loop_1 = function () {\n              var maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 : 150;\n              var chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;\n\n              if (vrsOffset != 0 && offset + chunkSize >= vrsOffset) {\n                // Make sure that the chunk doesn't end right on the EIP 155 marker if set\n                chunkSize = rawTx.length - offset;\n              }\n\n              var buffer = Buffer.alloc(offset === 0 ? 1 + paths.length * 4 + chunkSize : chunkSize);\n\n              if (offset === 0) {\n                buffer[0] = paths.length;\n                paths.forEach(function (element, index) {\n                  buffer.writeUInt32BE(element, 1 + 4 * index);\n                });\n                rawTx.copy(buffer, 1 + 4 * paths.length, offset, offset + chunkSize);\n              } else {\n                rawTx.copy(buffer, 0, offset, offset + chunkSize);\n              }\n\n              toSend.push(buffer);\n              offset += chunkSize;\n            };\n\n            while (offset !== rawTx.length) {\n              _loop_1();\n            }\n\n            provideForContract = function (address) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var erc20Info;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      erc20Info = byContractAddressAndChainId(address, chainIdTruncated);\n                      if (!erc20Info) return [3\n                      /*break*/\n                      , 2];\n                      log(\"ethereum\", \"loading erc20token info for \" + erc20Info.contractAddress + \" (\" + erc20Info.ticker + \")\");\n                      return [4\n                      /*yield*/\n                      , provideERC20TokenInformation(this.transport, erc20Info.data)];\n\n                    case 1:\n                      _a.sent();\n\n                      _a.label = 2;\n\n                    case 2:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            };\n\n            if (!(decodedTx.data.length >= 10)) return [3\n            /*break*/\n            , 15];\n            selector = decodedTx.data.substring(0, 10);\n            return [4\n            /*yield*/\n            , loadInfosForContractMethod(decodedTx.to, selector, chainIdTruncated, this.pluginsLoadConfig)];\n\n          case 1:\n            infos = _b.sent();\n            if (!infos) return [3\n            /*break*/\n            , 12];\n            plugin = infos.plugin, payload = infos.payload, signature = infos.signature, erc20OfInterest = infos.erc20OfInterest, abi = infos.abi;\n            if (!plugin) return [3\n            /*break*/\n            , 3];\n            log(\"ethereum\", \"loading plugin for \" + selector);\n            return [4\n            /*yield*/\n            , setExternalPlugin(this.transport, payload, signature)];\n\n          case 2:\n            _b.sent();\n\n            _b.label = 3;\n\n          case 3:\n            if (!(erc20OfInterest && erc20OfInterest.length && abi)) return [3\n            /*break*/\n            , 11];\n            contract = new ethers.utils.Interface(abi);\n            args = contract.parseTransaction(decodedTx).args;\n            _b.label = 4;\n\n          case 4:\n            _b.trys.push([4, 9, 10, 11]);\n\n            erc20OfInterest_1 = __values(erc20OfInterest), erc20OfInterest_1_1 = erc20OfInterest_1.next();\n            _b.label = 5;\n\n          case 5:\n            if (!!erc20OfInterest_1_1.done) return [3\n            /*break*/\n            , 8];\n            path = erc20OfInterest_1_1.value;\n            address = path.split(\".\").reduce(function (value, seg) {\n              if (seg === \"-1\" && Array.isArray(value)) {\n                return value[value.length - 1];\n              }\n\n              return value[seg];\n            }, args);\n            return [4\n            /*yield*/\n            , provideForContract(address)];\n\n          case 6:\n            _b.sent();\n\n            _b.label = 7;\n\n          case 7:\n            erc20OfInterest_1_1 = erc20OfInterest_1.next();\n            return [3\n            /*break*/\n            , 5];\n\n          case 8:\n            return [3\n            /*break*/\n            , 11];\n\n          case 9:\n            e_1_1 = _b.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            try {\n              if (erc20OfInterest_1_1 && !erc20OfInterest_1_1.done && (_a = erc20OfInterest_1[\"return\"])) _a.call(erc20OfInterest_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 11:\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            log(\"ethereum\", \"no infos for selector \" + selector);\n            _b.label = 13;\n\n          case 13:\n            return [4\n            /*yield*/\n            , provideForContract(decodedTx.to)];\n\n          case 14:\n            _b.sent();\n\n            _b.label = 15;\n\n          case 15:\n            return [2\n            /*return*/\n            , foreach(toSend, function (data, i) {\n              return _this.transport.send(0xe0, 0x04, i === 0 ? 0x00 : 0x80, 0x00, data).then(function (apduResponse) {\n                response = apduResponse;\n              });\n            }).then(function () {\n              var response_byte = response.slice(0, 1)[0];\n              var v = \"\";\n\n              if (chainId.times(2).plus(35).plus(1).isGreaterThan(255)) {\n                var oneByteChainId = (chainIdTruncated * 2 + 35) % 256;\n                var ecc_parity = response_byte - oneByteChainId;\n\n                if (txType != null) {\n                  // For EIP2930 and EIP1559 tx, v is simply the parity.\n                  v = ecc_parity % 2 == 1 ? \"00\" : \"01\";\n                } else {\n                  // Legacy type transaction with a big chain ID\n                  v = chainId.times(2).plus(35).plus(ecc_parity).toString(16);\n                }\n              } else {\n                v = response_byte.toString(16);\n              } // Make sure v has is prefixed with a 0 if its length is odd (\"1\" -> \"01\").\n\n\n              if (v.length % 2 == 1) {\n                v = \"0\" + v;\n              }\n\n              var r = response.slice(1, 1 + 32).toString(\"hex\");\n              var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n              return {\n                v: v,\n                r: r,\n                s: s\n              };\n            }, function (e) {\n              throw remapTransactionRelatedErrors(e);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   */\n\n\n  Eth.prototype.getAppConfiguration = function () {\n    return this.transport.send(0xe0, 0x06, 0x00, 0x00).then(function (response) {\n      return {\n        arbitraryDataEnabled: response[0] & 0x01,\n        erc20ProvisioningNecessary: response[0] & 0x02,\n        starkEnabled: response[0] & 0x04,\n        starkv2Supported: response[0] & 0x08,\n        version: \"\" + response[1] + \".\" + response[2] + \".\" + response[3]\n      };\n    });\n  };\n  /**\n  * You can sign a message according to eth_sign RPC call and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n  * @example\n  eth.signPersonalMessage(\"44'/60'/0'/0/0\", Buffer.from(\"test\").toString(\"hex\")).then(result => {\n  var v = result['v'] - 27;\n  v = v.toString(16);\n  if (v.length < 2) {\n    v = \"0\" + v;\n  }\n  console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n  })\n   */\n\n\n  Eth.prototype.signPersonalMessage = function (path, messageHex) {\n    var _this = this;\n\n    var paths = splitPath(path);\n    var offset = 0;\n    var message = Buffer.from(messageHex, \"hex\");\n    var toSend = [];\n    var response;\n\n    var _loop_2 = function () {\n      var maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 - 4 : 150;\n      var chunkSize = offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n      var buffer = Buffer.alloc(offset === 0 ? 1 + paths.length * 4 + 4 + chunkSize : chunkSize);\n\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach(function (element, index) {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        buffer.writeUInt32BE(message.length, 1 + 4 * paths.length);\n        message.copy(buffer, 1 + 4 * paths.length + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n\n      toSend.push(buffer);\n      offset += chunkSize;\n    };\n\n    while (offset !== message.length) {\n      _loop_2();\n    }\n\n    return foreach(toSend, function (data, i) {\n      return _this.transport.send(0xe0, 0x08, i === 0 ? 0x00 : 0x80, 0x00, data).then(function (apduResponse) {\n        response = apduResponse;\n      });\n    }).then(function () {\n      var v = response[0];\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        v: v,\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n  * Sign a prepared message following web3.eth.signTypedData specification. The host computes the domain separator and hashStruct(message)\n  * @example\n  eth.signEIP712HashedMessage(\"44'/60'/0'/0/0\", Buffer.from(\"0101010101010101010101010101010101010101010101010101010101010101\").toString(\"hex\"), Buffer.from(\"0202020202020202020202020202020202020202020202020202020202020202\").toString(\"hex\")).then(result => {\n  var v = result['v'] - 27;\n  v = v.toString(16);\n  if (v.length < 2) {\n    v = \"0\" + v;\n  }\n  console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n  })\n   */\n\n\n  Eth.prototype.signEIP712HashedMessage = function (path, domainSeparatorHex, hashStructMessageHex) {\n    var domainSeparator = hexBuffer(domainSeparatorHex);\n    var hashStruct = hexBuffer(hashStructMessageHex);\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 32 + 32, 0);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    domainSeparator.copy(buffer, offset);\n    offset += 32;\n    hashStruct.copy(buffer, offset);\n    return this.transport.send(0xe0, 0x0c, 0x00, 0x00, buffer).then(function (response) {\n      var v = response[0];\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        v: v,\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * get Stark public key for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @return the Stark public key\n   */\n\n\n  Eth.prototype.starkGetPublicKey = function (path, boolDisplay) {\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport.send(0xf0, 0x02, boolDisplay ? 0x01 : 0x00, 0x00, buffer).then(function (response) {\n      return response.slice(0, response.length - 2);\n    });\n  };\n  /**\n   * sign a Stark order\n   * @param path a path in BIP 32 format\n   * @option sourceTokenAddress contract address of the source token (not present for ETH)\n   * @param sourceQuantization quantization used for the source token\n   * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n   * @param destinationQuantization quantization used for the destination token\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountSell amount to sell\n   * @param amountBuy amount to buy\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n\n\n  Eth.prototype.starkSignOrder = function (path, sourceTokenAddress, sourceQuantization, destinationTokenAddress, destinationQuantization, sourceVault, destinationVault, amountSell, amountBuy, nonce, timestamp) {\n    var sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n    var destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 20 + 32 + 20 + 32 + 4 + 4 + 8 + 8 + 4 + 4, 0);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n\n    if (sourceTokenAddressHex) {\n      sourceTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n    Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 32;\n\n    if (destinationTokenAddressHex) {\n      destinationTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n    Buffer.from(destinationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport.send(0xf0, 0x04, 0x01, 0x00, buffer).then(function (response) {\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * sign a Stark order using the Starkex V2 protocol\n   * @param path a path in BIP 32 format\n   * @option sourceTokenAddress contract address of the source token (not present for ETH)\n   * @param sourceQuantizationType quantization type used for the source token\n   * @option sourceQuantization quantization used for the source token (not present for erc 721 or mintable erc 721)\n   * @option sourceMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the source token\n   * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n   * @param destinationQuantizationType quantization type used for the destination token\n   * @option destinationQuantization quantization used for the destination token (not present for erc 721 or mintable erc 721)\n   * @option destinationMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the destination token\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountSell amount to sell\n   * @param amountBuy amount to buy\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n\n\n  Eth.prototype.starkSignOrder_v2 = function (path, sourceTokenAddress, sourceQuantizationType, sourceQuantization, sourceMintableBlobOrTokenId, destinationTokenAddress, destinationQuantizationType, destinationQuantization, destinationMintableBlobOrTokenId, sourceVault, destinationVault, amountSell, amountBuy, nonce, timestamp) {\n    var sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n    var destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n\n    if (!(sourceQuantizationType in starkQuantizationTypeMap)) {\n      throw new Error(\"eth.starkSignOrderv2 invalid source quantization type=\" + sourceQuantizationType);\n    }\n\n    if (!(destinationQuantizationType in starkQuantizationTypeMap)) {\n      throw new Error(\"eth.starkSignOrderv2 invalid destination quantization type=\" + destinationQuantizationType);\n    }\n\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 1 + 20 + 32 + 32 + 1 + 20 + 32 + 32 + 4 + 4 + 8 + 8 + 4 + 4, 0);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    buffer[offset] = starkQuantizationTypeMap[sourceQuantizationType];\n    offset++;\n\n    if (sourceTokenAddressHex) {\n      sourceTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n\n    if (sourceQuantization) {\n      Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n\n    if (sourceMintableBlobOrTokenId) {\n      Buffer.from(sourceMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n    buffer[offset] = starkQuantizationTypeMap[destinationQuantizationType];\n    offset++;\n\n    if (destinationTokenAddressHex) {\n      destinationTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n\n    if (destinationQuantization) {\n      Buffer.from(destinationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n\n    if (destinationMintableBlobOrTokenId) {\n      Buffer.from(destinationMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport.send(0xf0, 0x04, 0x03, 0x00, buffer).then(function (response) {\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * sign a Stark transfer\n   * @param path a path in BIP 32 format\n   * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n   * @param transferQuantization quantization used for the token to be transferred\n   * @param targetPublicKey target Stark public key\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountTransfer amount to transfer\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n\n\n  Eth.prototype.starkSignTransfer = function (path, transferTokenAddress, transferQuantization, targetPublicKey, sourceVault, destinationVault, amountTransfer, nonce, timestamp) {\n    var transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n    var targetPublicKeyHex = hexBuffer(targetPublicKey);\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 20 + 32 + 32 + 4 + 4 + 8 + 4 + 4, 0);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n\n    if (transferTokenAddressHex) {\n      transferTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n    Buffer.from(transferQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 32;\n    targetPublicKeyHex.copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport.send(0xf0, 0x04, 0x02, 0x00, buffer).then(function (response) {\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * sign a Stark transfer or conditional transfer using the Starkex V2 protocol\n   * @param path a path in BIP 32 format\n   * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n   * @param transferQuantizationType quantization type used for the token to be transferred\n   * @option transferQuantization quantization used for the token to be transferred (not present for erc 721 or mintable erc 721)\n   * @option transferMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) associated to the token to be transferred\n   * @param targetPublicKey target Stark public key\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountTransfer amount to transfer\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @option conditionalTransferAddress onchain address of the condition for a conditional transfer\n   * @option conditionalTransferFact fact associated to the condition for a conditional transfer\n   * @return the signature\n   */\n\n\n  Eth.prototype.starkSignTransfer_v2 = function (path, transferTokenAddress, transferQuantizationType, transferQuantization, transferMintableBlobOrTokenId, targetPublicKey, sourceVault, destinationVault, amountTransfer, nonce, timestamp, conditionalTransferAddress, conditionalTransferFact) {\n    var transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n    var targetPublicKeyHex = hexBuffer(targetPublicKey);\n    var conditionalTransferAddressHex = maybeHexBuffer(conditionalTransferAddress);\n\n    if (!(transferQuantizationType in starkQuantizationTypeMap)) {\n      throw new Error(\"eth.starkSignTransferv2 invalid quantization type=\" + transferQuantizationType);\n    }\n\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 1 + 20 + 32 + 32 + 32 + 4 + 4 + 8 + 4 + 4 + (conditionalTransferAddressHex ? 32 + 20 : 0), 0);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    buffer[offset] = starkQuantizationTypeMap[transferQuantizationType];\n    offset++;\n\n    if (transferTokenAddressHex) {\n      transferTokenAddressHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n\n    if (transferQuantization) {\n      Buffer.from(transferQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n\n    if (transferMintableBlobOrTokenId) {\n      Buffer.from(transferMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n    targetPublicKeyHex.copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(buffer, offset);\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n\n    if (conditionalTransferAddressHex && conditionalTransferFact) {\n      offset += 4;\n      Buffer.from(conditionalTransferFact.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n      offset += 32;\n      conditionalTransferAddressHex.copy(buffer, offset);\n    }\n\n    return this.transport.send(0xf0, 0x04, conditionalTransferAddressHex ? 0x05 : 0x04, 0x00, buffer).then(function (response) {\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * provide quantization information before singing a deposit or withdrawal Stark powered contract call\n   *\n   * It shall be run following a provideERC20TokenInformation call for the given contract\n   *\n   * @param operationContract contract address of the token to be transferred (not present for ETH)\n   * @param operationQuantization quantization used for the token to be transferred\n   */\n\n\n  Eth.prototype.starkProvideQuantum = function (operationContract, operationQuantization) {\n    var operationContractHex = maybeHexBuffer(operationContract);\n    var buffer = Buffer.alloc(20 + 32, 0);\n\n    if (operationContractHex) {\n      operationContractHex.copy(buffer, 0);\n    }\n\n    Buffer.from(operationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, 20);\n    return this.transport.send(0xf0, 0x08, 0x00, 0x00, buffer).then(function () {\n      return true;\n    }, function (e) {\n      if (e && e.statusCode === 0x6d00) {\n        // this case happen for ETH application versions not supporting Stark extensions\n        return false;\n      }\n\n      throw e;\n    });\n  };\n  /**\n   * provide quantization information before singing a deposit or withdrawal Stark powered contract call using the Starkex V2 protocol\n   *\n   * It shall be run following a provideERC20TokenInformation call for the given contract\n   *\n   * @param operationContract contract address of the token to be transferred (not present for ETH)\n   * @param operationQuantizationType quantization type of the token to be transferred\n   * @option operationQuantization quantization used for the token to be transferred (not present for erc 721 or mintable erc 721)\n   * @option operationMintableBlobOrTokenId mintable blob (mintable erc 20 / mintable erc 721) or token id (erc 721) of the token to be transferred\n   */\n\n\n  Eth.prototype.starkProvideQuantum_v2 = function (operationContract, operationQuantizationType, operationQuantization, operationMintableBlobOrTokenId) {\n    var operationContractHex = maybeHexBuffer(operationContract);\n\n    if (!(operationQuantizationType in starkQuantizationTypeMap)) {\n      throw new Error(\"eth.starkProvideQuantumV2 invalid quantization type=\" + operationQuantizationType);\n    }\n\n    var buffer = Buffer.alloc(20 + 32 + 32, 0);\n    var offset = 0;\n\n    if (operationContractHex) {\n      operationContractHex.copy(buffer, offset);\n    }\n\n    offset += 20;\n\n    if (operationQuantization) {\n      Buffer.from(operationQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    offset += 32;\n\n    if (operationMintableBlobOrTokenId) {\n      Buffer.from(operationMintableBlobOrTokenId.toString(16).padStart(64, \"0\"), \"hex\").copy(buffer, offset);\n    }\n\n    return this.transport.send(0xf0, 0x08, starkQuantizationTypeMap[operationQuantizationType], 0x00, buffer).then(function () {\n      return true;\n    }, function (e) {\n      if (e && e.statusCode === 0x6d00) {\n        // this case happen for ETH application versions not supporting Stark extensions\n        return false;\n      }\n\n      throw e;\n    });\n  };\n  /**\n   * sign the given hash over the Stark curve\n   * It is intended for speed of execution in case an unknown Stark model is pushed and should be avoided as much as possible.\n   * @param path a path in BIP 32 format\n   * @param hash hexadecimal hash to sign\n   * @return the signature\n   */\n\n\n  Eth.prototype.starkUnsafeSign = function (path, hash) {\n    var hashHex = hexBuffer(hash);\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4 + 32);\n    var offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    hashHex.copy(buffer, offset);\n    return this.transport.send(0xf0, 0x0a, 0x00, 0x00, buffer).then(function (response) {\n      var r = response.slice(1, 1 + 32).toString(\"hex\");\n      var s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return {\n        r: r,\n        s: s\n      };\n    });\n  };\n  /**\n   * get an Ethereum 2 BLS-12 381 public key for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @return an object with a publicKey\n   * @example\n   * eth.eth2GetPublicKey(\"12381/3600/0/0\").then(o => o.publicKey)\n   */\n\n\n  Eth.prototype.eth2GetPublicKey = function (path, boolDisplay) {\n    var paths = splitPath(path);\n    var buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach(function (element, index) {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport.send(0xe0, 0x0e, boolDisplay ? 0x01 : 0x00, 0x00, buffer).then(function (response) {\n      return {\n        publicKey: response.slice(0, -2).toString(\"hex\")\n      };\n    });\n  };\n  /**\n   * Set the index of a Withdrawal key used as withdrawal credentials in an ETH 2 deposit contract call signature\n   *\n   * It shall be run before the ETH 2 deposit transaction is signed. If not called, the index is set to 0\n   *\n   * @param withdrawalIndex index path in the EIP 2334 path m/12381/3600/withdrawalIndex/0\n   * @return True if the method was executed successfully\n   */\n\n\n  Eth.prototype.eth2SetWithdrawalIndex = function (withdrawalIndex) {\n    var buffer = Buffer.alloc(4, 0);\n    buffer.writeUInt32BE(withdrawalIndex, 0);\n    return this.transport.send(0xe0, 0x10, 0x00, 0x00, buffer).then(function () {\n      return true;\n    }, function (e) {\n      if (e && e.statusCode === 0x6d00) {\n        // this case happen for ETH application versions not supporting ETH 2\n        return false;\n      }\n\n      throw e;\n    });\n  };\n  /**\n   * Set the name of the plugin that should be used to parse the next transaction\n   *\n   * @param pluginName string containing the name of the plugin, must have length between 1 and 30 bytes\n   * @return True if the method was executed successfully\n   */\n\n\n  Eth.prototype.setExternalPlugin = function (pluginName, contractAddress, selector) {\n    return setExternalPlugin(this.transport, pluginName, selector);\n  };\n\n  return Eth;\n}();\n\nexport default Eth; // internal helpers\n\nfunction provideERC20TokenInformation(transport, data) {\n  return transport.send(0xe0, 0x0a, 0x00, 0x00, data).then(function () {\n    return true;\n  }, function (e) {\n    if (e && e.statusCode === 0x6d00) {\n      // this case happen for older version of ETH app, since older app version had the ERC20 data hardcoded, it's fine to assume it worked.\n      // we return a flag to know if the call was effective or not\n      return false;\n    }\n\n    throw e;\n  });\n}\n\nfunction setExternalPlugin(transport, payload, signature) {\n  var payloadBuffer = Buffer.from(payload, \"hex\");\n  var signatureBuffer = Buffer.from(signature, \"hex\");\n  var buffer = Buffer.concat([payloadBuffer, signatureBuffer]);\n  return transport.send(0xe0, 0x12, 0x00, 0x00, buffer).then(function () {\n    return true;\n  }, function (e) {\n    if (e && e.statusCode === 0x6a80) {\n      // this case happen when the plugin name is too short or too long\n      return false;\n    } else if (e && e.statusCode === 0x6984) {\n      // this case happen when the plugin requested is not installed on the device\n      return false;\n    } else if (e && e.statusCode === 0x6d00) {\n      // this case happen for older version of ETH app\n      return false;\n    }\n\n    throw e;\n  });\n}","map":{"version":3,"mappings":"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","names":["splitPath","foreach","log","EthAppPleaseEnableContractData","BigNumber","ethers","byContractAddressAndChainId","loadInfosForContractMethod","starkQuantizationTypeMap","eth","erc20","erc721","erc20mintable","erc721mintable","hexBuffer","str","Buffer","from","startsWith","slice","maybeHexBuffer","remapTransactionRelatedErrors","e","statusCode","transport","scrambleKey","pluginsLoadConfig","decorateAppAPIMethods","Eth","path","boolDisplay","boolChaincode","paths","buffer","alloc","length","forEach","element","index","writeUInt32BE","send","then","response","publicKeyLength","addressLength","publicKey","toString","address","chainCode","undefined","_a","data","provideERC20TokenInformation","rawTxHex","offset","rawTx","VALID_TYPES","txType","includes","rlpData","toSend","rlpTx","utils","RLP","decode","map","hex","vrsOffset","chainId","chainIdTruncated","rlpDecoded","decodedTx","to","rlpVrs","encode","sizeOfListLen","chainIdSrc","chainIdTruncatedBuf","copy","readUInt32BE","maxChunkSize","chunkSize","push","provideForContract","erc20Info","contractAddress","ticker","selector","substring","infos","_b","plugin","payload","signature","erc20OfInterest","abi","setExternalPlugin","contract","Interface","args","parseTransaction","erc20OfInterest_1","erc20OfInterest_1_1","split","reduce","value","seg","Array","isArray","i","apduResponse","response_byte","v","times","plus","isGreaterThan","oneByteChainId","ecc_parity","r","s","arbitraryDataEnabled","erc20ProvisioningNecessary","starkEnabled","starkv2Supported","version","messageHex","message","domainSeparatorHex","hashStructMessageHex","domainSeparator","hashStruct","sourceTokenAddress","sourceQuantization","destinationTokenAddress","destinationQuantization","sourceVault","destinationVault","amountSell","amountBuy","nonce","timestamp","sourceTokenAddressHex","destinationTokenAddressHex","padStart","sourceQuantizationType","sourceMintableBlobOrTokenId","destinationQuantizationType","destinationMintableBlobOrTokenId","Error","transferTokenAddress","transferQuantization","targetPublicKey","amountTransfer","transferTokenAddressHex","targetPublicKeyHex","transferQuantizationType","transferMintableBlobOrTokenId","conditionalTransferAddress","conditionalTransferFact","conditionalTransferAddressHex","operationContract","operationQuantization","operationContractHex","operationQuantizationType","operationMintableBlobOrTokenId","hash","hashHex","withdrawalIndex","pluginName","payloadBuffer","signatureBuffer","concat"],"sourceRoot":"","sources":["../src/Eth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}