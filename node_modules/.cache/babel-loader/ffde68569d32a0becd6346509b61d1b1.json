{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoECKey = void 0;\n\nconst lib_1 = require(\"./lib\");\n\nconst RegistryItem_1 = require(\"./RegistryItem\");\n\nconst RegistryType_1 = require(\"./RegistryType\");\n\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"curve\"] = 1] = \"curve\";\n  Keys[Keys[\"private\"] = 2] = \"private\";\n  Keys[Keys[\"data\"] = 3] = \"data\";\n})(Keys || (Keys = {}));\n\nclass CryptoECKey extends RegistryItem_1.RegistryItem {\n  constructor(args) {\n    super();\n\n    this.getCurve = () => this.curve || 0;\n\n    this.isPrivateKey = () => this.privateKey || false;\n\n    this.getData = () => this.data;\n\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.CRYPTO_ECKEY;\n    };\n\n    this.toDataItem = () => {\n      const map = {};\n\n      if (this.curve) {\n        map[Keys.curve] = this.curve;\n      }\n\n      if (this.privateKey !== undefined) {\n        map[Keys.private] = this.privateKey;\n      }\n\n      map[Keys.data] = this.data;\n      return new lib_1.DataItem(map);\n    };\n\n    this.data = args.data;\n    this.curve = args.curve;\n    this.privateKey = args.privateKey;\n  }\n\n}\n\nexports.CryptoECKey = CryptoECKey;\n\nCryptoECKey.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const curve = map[Keys.curve];\n  const privateKey = map[Keys.private];\n  const data = map[Keys.data];\n\n  if (!data) {\n    throw new Error(`#[ur-registry][CryptoECKey][fn.fromDataItem]: decoded [dataItem][#data.data] is undefined: ${dataItem}`);\n  }\n\n  return new CryptoECKey({\n    data,\n    curve,\n    privateKey\n  });\n};\n\nCryptoECKey.fromCBOR = _cborPayload => {\n  const dataItem = lib_1.decodeToDataItem(_cborPayload);\n  return CryptoECKey.fromDataItem(dataItem);\n};","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAKA,IAAL;;AAAA,WAAKA,IAAL,EAAS;AACPA;AACAA;AACAA;AACD,CAJD,EAAKA,IAAI,KAAJA,IAAI,MAAT;;AAMA,MAAaC,WAAb,SAAiCC,2BAAjC,CAA6C;AAI3CC,cAAYC,IAAZ,EAAwE;AACtE;;AAMK,oBAAW,MAAM,KAAKC,KAAL,IAAc,CAA/B;;AACA,wBAAe,MAAM,KAAKC,UAAL,IAAmB,KAAxC;;AACA,mBAAU,MAAM,KAAKC,IAArB;;AAEP,2BAAkB,MAAK;AACrB,aAAOC,6BAAcC,YAArB;AACD,KAFD;;AAIA,sBAAa,MAAK;AAChB,YAAMC,GAAG,GAAG,EAAZ;;AACA,UAAI,KAAKL,KAAT,EAAgB;AACdK,WAAG,CAACV,IAAI,CAACK,KAAN,CAAH,GAAkB,KAAKA,KAAvB;AACD;;AACD,UAAI,KAAKC,UAAL,KAAoBK,SAAxB,EAAmC;AACjCD,WAAG,CAACV,IAAI,CAACY,OAAN,CAAH,GAAoB,KAAKN,UAAzB;AACD;;AACDI,SAAG,CAACV,IAAI,CAACO,IAAN,CAAH,GAAiB,KAAKA,IAAtB;AACA,aAAO,IAAIM,cAAJ,CAAaH,GAAb,CAAP;AACD,KAVD;;AAbE,SAAKH,IAAL,GAAYH,IAAI,CAACG,IAAjB;AACA,SAAKF,KAAL,GAAaD,IAAI,CAACC,KAAlB;AACA,SAAKC,UAAL,GAAkBF,IAAI,CAACE,UAAvB;AACD;;AAT0C;;AAA7CQ;;AA+BSb,2BAAgBc,QAAD,IAAuB;AAC3C,QAAML,GAAG,GAAGK,QAAQ,CAACC,OAAT,EAAZ;AACA,QAAMX,KAAK,GAAGK,GAAG,CAACV,IAAI,CAACK,KAAN,CAAjB;AACA,QAAMC,UAAU,GAAGI,GAAG,CAACV,IAAI,CAACY,OAAN,CAAtB;AACA,QAAML,IAAI,GAAGG,GAAG,CAACV,IAAI,CAACO,IAAN,CAAhB;;AACA,MAAI,CAACA,IAAL,EAAW;AACT,UAAM,IAAIU,KAAJ,CACJ,8FAA8FF,QAAQ,EADlG,CAAN;AAGD;;AACD,SAAO,IAAId,WAAJ,CAAgB;AAAEM,QAAF;AAAQF,SAAR;AAAeC;AAAf,GAAhB,CAAP;AACD,CAXM;;AAaOL,uBAAYiB,YAAD,IAAyB;AAChD,QAAMH,QAAQ,GAAGF,uBAAiBK,YAAjB,CAAjB;AACA,SAAOjB,WAAW,CAACkB,YAAZ,CAAyBJ,QAAzB,CAAP;AACD,CAHa","names":["Keys","CryptoECKey","RegistryItem_1","constructor","args","curve","privateKey","data","RegistryType_1","CRYPTO_ECKEY","map","undefined","private","lib_1","exports","dataItem","getData","Error","_cborPayload","fromDataItem"],"sourceRoot":"","sources":["../src/CryptoECKey.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}