{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigateToDashboard = exports.WebUSBCouldNotPair = exports.WebHIDCouldNotPair = exports.WebUSBCouldNotInitialize = exports.WebHIDCouldNotInitialize = exports.WebUSBNotAvailable = exports.WebHIDNotAvailable = exports.FirmwareUpdateRequired = exports.WrongApp = exports.SelectApp = exports.ConflictingApp = exports.PopupClosedError = exports.DeviceLocked = exports.DisconnectedDeviceDuringOperation = exports.DeviceDisconnected = exports.ActionCancelled = exports.HDWalletError = exports.HDWalletErrorType = void 0;\nvar HDWalletErrorType;\n\n(function (HDWalletErrorType) {\n  HDWalletErrorType[\"ActionCancelled\"] = \"ActionCancelled\";\n  HDWalletErrorType[\"DeviceDisconnected\"] = \"DeviceDisconnected\";\n  HDWalletErrorType[\"DisconnectedDeviceDuringOperation\"] = \"DisconnectedDeviceDuringOperation\";\n  HDWalletErrorType[\"DeviceLocked\"] = \"DeviceLocked\";\n  HDWalletErrorType[\"PopupClosedError\"] = \"PopupClosedError\";\n  HDWalletErrorType[\"ConflictingApp\"] = \"ConflictingApp\";\n  HDWalletErrorType[\"SelectApp\"] = \"SelectApp\";\n  HDWalletErrorType[\"WrongApp\"] = \"WrongApp\";\n  HDWalletErrorType[\"FirmwareUpdateRequired\"] = \"FirmwareUpdateRequired\";\n  HDWalletErrorType[\"WebHIDNotAvailable\"] = \"WebHIDNotAvailable\";\n  HDWalletErrorType[\"WebHIDCouldNotInitialize\"] = \"WebHIDCouldNotInitialize\";\n  HDWalletErrorType[\"WebHIDCouldNotPair\"] = \"WebHIDCouldNotPair\";\n  HDWalletErrorType[\"WebUSBNotAvailable\"] = \"WebUSBNotAvailable\";\n  HDWalletErrorType[\"WebUSBCouldNotInitialize\"] = \"WebUSBCouldNotInitialize\";\n  HDWalletErrorType[\"WebUSBCouldNotPair\"] = \"WebUSBCouldNotPair\";\n  HDWalletErrorType[\"NavigateToDashboard\"] = \"NavigateToDashboard\";\n})(HDWalletErrorType = exports.HDWalletErrorType || (exports.HDWalletErrorType = {}));\n\nclass HDWalletError extends Error {\n  constructor(message, type) {\n    super(message);\n    this.name = type;\n    this.type = type;\n    this.message = message;\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n  }\n\n}\n\nexports.HDWalletError = HDWalletError;\n\nclass ActionCancelled extends HDWalletError {\n  constructor() {\n    super(\"Action cancelled\", HDWalletErrorType.ActionCancelled);\n  }\n\n}\n\nexports.ActionCancelled = ActionCancelled;\n\nclass DeviceDisconnected extends HDWalletError {\n  constructor() {\n    super(\"Device disconnected\", HDWalletErrorType.DeviceDisconnected);\n  }\n\n}\n\nexports.DeviceDisconnected = DeviceDisconnected;\n\nclass DisconnectedDeviceDuringOperation extends HDWalletError {\n  constructor() {\n    super(\"Ledger device disconnected during operation\", HDWalletErrorType.DisconnectedDeviceDuringOperation);\n  }\n\n}\n\nexports.DisconnectedDeviceDuringOperation = DisconnectedDeviceDuringOperation;\n\nclass DeviceLocked extends HDWalletError {\n  constructor() {\n    super(\"Device locked\", HDWalletErrorType.DeviceLocked);\n  }\n\n}\n\nexports.DeviceLocked = DeviceLocked;\n\nclass PopupClosedError extends HDWalletError {\n  constructor() {\n    super(\"TrezorConnect popup closed\", HDWalletErrorType.PopupClosedError);\n  }\n\n}\n\nexports.PopupClosedError = PopupClosedError;\n\nclass ConflictingApp extends HDWalletError {\n  constructor(model) {\n    super(`Conflicting Application: Another wallet is trying to connect with your ${model}.`, HDWalletErrorType.ConflictingApp);\n    this.model = model;\n  }\n\n}\n\nexports.ConflictingApp = ConflictingApp;\n\nclass SelectApp extends HDWalletError {\n  constructor(model, app) {\n    super(`Please open the ${app} app on your ${model}.`, HDWalletErrorType.SelectApp);\n  }\n\n}\n\nexports.SelectApp = SelectApp;\n\nclass WrongApp extends HDWalletError {\n  constructor(model, app) {\n    super(`Wrong app open. Please open the ${app} app on your ${model} and try again.`, HDWalletErrorType.WrongApp);\n  }\n\n}\n\nexports.WrongApp = WrongApp;\n\nclass FirmwareUpdateRequired extends HDWalletError {\n  constructor(model, minVer) {\n    super(`Firmware ${minVer} or later is required to use your ${model} with this client. Please update your device.`, HDWalletErrorType.FirmwareUpdateRequired);\n  }\n\n}\n\nexports.FirmwareUpdateRequired = FirmwareUpdateRequired;\n\nclass WebHIDNotAvailable extends HDWalletError {\n  constructor() {\n    super(`WebHID is not available in this browser. We recommend trying Chrome.`, HDWalletErrorType.WebHIDNotAvailable);\n  }\n\n}\n\nexports.WebHIDNotAvailable = WebHIDNotAvailable;\n\nclass WebUSBNotAvailable extends HDWalletError {\n  constructor() {\n    super(`WebUSB is not available in this browser. We recommend trying Chrome.`, HDWalletErrorType.WebUSBNotAvailable);\n  }\n\n}\n\nexports.WebUSBNotAvailable = WebUSBNotAvailable;\n\nclass WebHIDCouldNotInitialize extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not initialize ${model}: ${message}`, HDWalletErrorType.WebHIDCouldNotInitialize);\n  }\n\n}\n\nexports.WebHIDCouldNotInitialize = WebHIDCouldNotInitialize;\n\nclass WebUSBCouldNotInitialize extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not initialize ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotInitialize);\n  }\n\n}\n\nexports.WebUSBCouldNotInitialize = WebUSBCouldNotInitialize;\n\nclass WebHIDCouldNotPair extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not pair ${model}: ${message}`, HDWalletErrorType.WebHIDCouldNotPair);\n  }\n\n}\n\nexports.WebHIDCouldNotPair = WebHIDCouldNotPair;\n\nclass WebUSBCouldNotPair extends HDWalletError {\n  constructor(model, message) {\n    super(`Could not pair ${model}: ${message}`, HDWalletErrorType.WebUSBCouldNotPair);\n  }\n\n}\n\nexports.WebUSBCouldNotPair = WebUSBCouldNotPair;\n\nclass NavigateToDashboard extends HDWalletError {\n  constructor(model) {\n    super(`Please navigate to the dashboard of your ${model}.`, HDWalletErrorType.NavigateToDashboard);\n  }\n\n}\n\nexports.NavigateToDashboard = NavigateToDashboard;","map":{"version":3,"mappings":";;;;;;AAAA,IAAYA,iBAAZ;;AAAA,WAAYA,iBAAZ,EAA6B;AAC3BA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACD,CAjBD,EAAYA,iBAAiB,GAAjBC,0DAAiB,EAAjB,CAAZ;;AAmBA,MAAaC,aAAb,SAAmCC,KAAnC,CAAwC;AAGtCC,cAAYC,OAAZ,EAA6BC,IAA7B,EAAoD;AAClD,UAAMD,OAAN;AACA,SAAKE,IAAL,GAAYD,IAAZ;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKD,OAAL,GAAeA,OAAf;;AACA,QAAI,OAAOF,KAAK,CAACK,iBAAb,KAAmC,UAAvC,EAAmD;AACjDL,WAAK,CAACK,iBAAN,CAAwB,IAAxB,EAA8B,KAAKJ,WAAnC;AACD,KAFD,MAEO;AACL,WAAKK,KAAL,GAAa,IAAIN,KAAJ,CAAUE,OAAV,EAAmBI,KAAhC;AACD;AACF;;AAbqC;;AAAxCR;;AAgBA,MAAaS,eAAb,SAAqCR,aAArC,CAAkD;AAChDE;AACE,UAAM,kBAAN,EAA0BJ,iBAAiB,CAACU,eAA5C;AACD;;AAH+C;;AAAlDT;;AAMA,MAAaU,kBAAb,SAAwCT,aAAxC,CAAqD;AACnDE;AACE,UAAM,qBAAN,EAA6BJ,iBAAiB,CAACW,kBAA/C;AACD;;AAHkD;;AAArDV;;AAMA,MAAaW,iCAAb,SAAuDV,aAAvD,CAAoE;AAClEE;AACE,UAAM,6CAAN,EAAqDJ,iBAAiB,CAACY,iCAAvE;AACD;;AAHiE;;AAApEX;;AAMA,MAAaY,YAAb,SAAkCX,aAAlC,CAA+C;AAC7CE;AACE,UAAM,eAAN,EAAuBJ,iBAAiB,CAACa,YAAzC;AACD;;AAH4C;;AAA/CZ;;AAMA,MAAaa,gBAAb,SAAsCZ,aAAtC,CAAmD;AACjDE;AACE,UAAM,4BAAN,EAAoCJ,iBAAiB,CAACc,gBAAtD;AACD;;AAHgD;;AAAnDb;;AAMA,MAAac,cAAb,SAAoCb,aAApC,CAAiD;AAG/CE,cAAYY,KAAZ,EAAyB;AACvB,UACE,0EAA0EA,KAAK,GADjF,EAEEhB,iBAAiB,CAACe,cAFpB;AAIA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAT8C;;AAAjDf;;AAYA,MAAagB,SAAb,SAA+Bf,aAA/B,CAA4C;AAC1CE,cAAYY,KAAZ,EAA2BE,GAA3B,EAAsC;AACpC,UAAM,mBAAmBA,GAAG,gBAAgBF,KAAK,GAAjD,EAAsDhB,iBAAiB,CAACiB,SAAxE;AACD;;AAHyC;;AAA5ChB;;AAMA,MAAakB,QAAb,SAA8BjB,aAA9B,CAA2C;AACzCE,cAAYY,KAAZ,EAA2BE,GAA3B,EAAsC;AACpC,UAAM,mCAAmCA,GAAG,gBAAgBF,KAAK,iBAAjE,EAAoFhB,iBAAiB,CAACmB,QAAtG;AACD;;AAHwC;;AAA3ClB;;AAMA,MAAamB,sBAAb,SAA4ClB,aAA5C,CAAyD;AACvDE,cAAYY,KAAZ,EAA2BK,MAA3B,EAAyC;AACvC,UACE,YAAYA,MAAM,qCAAqCL,KAAK,+CAD9D,EAEEhB,iBAAiB,CAACoB,sBAFpB;AAID;;AANsD;;AAAzDnB;;AASA,MAAaqB,kBAAb,SAAwCpB,aAAxC,CAAqD;AACnDE;AACE,UAAM,sEAAN,EAA8EJ,iBAAiB,CAACsB,kBAAhG;AACD;;AAHkD;;AAArDrB;;AAMA,MAAasB,kBAAb,SAAwCrB,aAAxC,CAAqD;AACnDE;AACE,UAAM,sEAAN,EAA8EJ,iBAAiB,CAACuB,kBAAhG;AACD;;AAHkD;;AAArDtB;;AAMA,MAAauB,wBAAb,SAA8CtB,aAA9C,CAA2D;AACzDE,cAAYY,KAAZ,EAA2BX,OAA3B,EAA0C;AACxC,UAAM,wBAAwBW,KAAK,KAAKX,OAAO,EAA/C,EAAmDL,iBAAiB,CAACwB,wBAArE;AACD;;AAHwD;;AAA3DvB;;AAMA,MAAawB,wBAAb,SAA8CvB,aAA9C,CAA2D;AACzDE,cAAYY,KAAZ,EAA2BX,OAA3B,EAA0C;AACxC,UAAM,wBAAwBW,KAAK,KAAKX,OAAO,EAA/C,EAAmDL,iBAAiB,CAACyB,wBAArE;AACD;;AAHwD;;AAA3DxB;;AAMA,MAAayB,kBAAb,SAAwCxB,aAAxC,CAAqD;AACnDE,cAAYY,KAAZ,EAA2BX,OAA3B,EAA0C;AACxC,UAAM,kBAAkBW,KAAK,KAAKX,OAAO,EAAzC,EAA6CL,iBAAiB,CAAC0B,kBAA/D;AACD;;AAHkD;;AAArDzB;;AAMA,MAAa0B,kBAAb,SAAwCzB,aAAxC,CAAqD;AACnDE,cAAYY,KAAZ,EAA2BX,OAA3B,EAA0C;AACxC,UAAM,kBAAkBW,KAAK,KAAKX,OAAO,EAAzC,EAA6CL,iBAAiB,CAAC2B,kBAA/D;AACD;;AAHkD;;AAArD1B;;AAMA,MAAa2B,mBAAb,SAAyC1B,aAAzC,CAAsD;AACpDE,cAAYY,KAAZ,EAAyB;AACvB,UAAM,4CAA4CA,KAAK,GAAvD,EAA4DhB,iBAAiB,CAAC4B,mBAA9E;AACD;;AAHmD;;AAAtD3B","names":["HDWalletErrorType","exports","HDWalletError","Error","constructor","message","type","name","captureStackTrace","stack","ActionCancelled","DeviceDisconnected","DisconnectedDeviceDuringOperation","DeviceLocked","PopupClosedError","ConflictingApp","model","SelectApp","app","WrongApp","FirmwareUpdateRequired","minVer","WebHIDNotAvailable","WebUSBNotAvailable","WebHIDCouldNotInitialize","WebUSBCouldNotInitialize","WebHIDCouldNotPair","WebUSBCouldNotPair","NavigateToDashboard"],"sourceRoot":"","sources":["../src/exceptions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}