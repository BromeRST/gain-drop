{"ast":null,"code":"import blob from \"@ledgerhq/cryptoassets/data/erc20-signatures\";\n/**\n * Retrieve the token information by a given contract address if any\n */\n\nexport var byContractAddressAndChainId = function (contract, chainId) {\n  return get().byContractAndChainId(asContractAddress(contract), chainId);\n};\n/**\n * list all the ERC20 tokens informations\n */\n\nexport var list = function () {\n  return get().list();\n};\n\nvar asContractAddress = function (addr) {\n  var a = addr.toLowerCase();\n  return a.startsWith(\"0x\") ? a : \"0x\" + a;\n}; // this internal get() will lazy load and cache the data from the erc20 data blob\n\n\nvar get = function () {\n  var cache;\n  return function () {\n    if (cache) return cache;\n    var buf = Buffer.from(blob, \"base64\");\n    var map = {};\n    var entries = [];\n    var i = 0;\n\n    while (i < buf.length) {\n      var length_1 = buf.readUInt32BE(i);\n      i += 4;\n      var item = buf.slice(i, i + length_1);\n      var j = 0;\n      var tickerLength = item.readUInt8(j);\n      j += 1;\n      var ticker = item.slice(j, j + tickerLength).toString(\"ascii\");\n      j += tickerLength;\n      var contractAddress = asContractAddress(item.slice(j, j + 20).toString(\"hex\"));\n      j += 20;\n      var decimals = item.readUInt32BE(j);\n      j += 4;\n      var chainId = item.readUInt32BE(j);\n      j += 4;\n      var signature = item.slice(j);\n      var entry = {\n        ticker: ticker,\n        contractAddress: contractAddress,\n        decimals: decimals,\n        chainId: chainId,\n        signature: signature,\n        data: item\n      };\n      entries.push(entry);\n      map[String(chainId) + \":\" + contractAddress] = entry;\n      i += length_1;\n    }\n\n    var api = {\n      list: function () {\n        return entries;\n      },\n      byContractAndChainId: function (contractAddress, chainId) {\n        return map[String(chainId) + \":\" + contractAddress];\n      }\n    };\n    cache = api;\n    return api;\n  };\n}();","map":{"version":3,"mappings":"AAAA,OAAOA,IAAP,MAAiB,8CAAjB;AAEA;;;;AAGA,OAAO,IAAMC,2BAA2B,GAAG,UACzCC,QADyC,EAEzCC,OAFyC,EAE1B;AAEf,YAAG,GAAGC,oBAAN,CAA2BC,iBAAiB,CAACH,QAAD,CAA5C,EAAwDC,OAAxD;AAAgE,CAJ3D;AAMP;;;;AAGA,OAAO,IAAMG,IAAI,GAAG;AAAmB,YAAG,GAAGA,IAAN;AAAY,CAA5C;;AAiBP,IAAMD,iBAAiB,GAAG,UAACE,IAAD,EAAa;AACrC,MAAMC,CAAC,GAAGD,IAAI,CAACE,WAAL,EAAV;AACA,SAAOD,CAAC,CAACE,UAAF,CAAa,IAAb,IAAqBF,CAArB,GAAyB,OAAOA,CAAvC;AACD,CAHD,C,CAKA;;;AACA,IAAMG,GAAG,GAAe;AACtB,MAAIC,KAAJ;AACA,SAAO;AACL,QAAIA,KAAJ,EAAW,OAAOA,KAAP;AACX,QAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYf,IAAZ,EAAkB,QAAlB,CAAZ;AACA,QAAMgB,GAAG,GAAG,EAAZ;AACA,QAAMC,OAAO,GAAgB,EAA7B;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGL,GAAG,CAACM,MAAf,EAAuB;AACrB,UAAMC,QAAM,GAAGP,GAAG,CAACQ,YAAJ,CAAiBH,CAAjB,CAAf;AACAA,OAAC,IAAI,CAAL;AACA,UAAMI,IAAI,GAAGT,GAAG,CAACU,KAAJ,CAAUL,CAAV,EAAaA,CAAC,GAAGE,QAAjB,CAAb;AACA,UAAII,CAAC,GAAG,CAAR;AACA,UAAMC,YAAY,GAAGH,IAAI,CAACI,SAAL,CAAeF,CAAf,CAArB;AACAA,OAAC,IAAI,CAAL;AACA,UAAMG,MAAM,GAAGL,IAAI,CAACC,KAAL,CAAWC,CAAX,EAAcA,CAAC,GAAGC,YAAlB,EAAgCG,QAAhC,CAAyC,OAAzC,CAAf;AACAJ,OAAC,IAAIC,YAAL;AACA,UAAMI,eAAe,GAAGxB,iBAAiB,CACvCiB,IAAI,CAACC,KAAL,CAAWC,CAAX,EAAcA,CAAC,GAAG,EAAlB,EAAsBI,QAAtB,CAA+B,KAA/B,CADuC,CAAzC;AAGAJ,OAAC,IAAI,EAAL;AACA,UAAMM,QAAQ,GAAGR,IAAI,CAACD,YAAL,CAAkBG,CAAlB,CAAjB;AACAA,OAAC,IAAI,CAAL;AACA,UAAMrB,OAAO,GAAGmB,IAAI,CAACD,YAAL,CAAkBG,CAAlB,CAAhB;AACAA,OAAC,IAAI,CAAL;AACA,UAAMO,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAWC,CAAX,CAAlB;AACA,UAAMQ,KAAK,GAAc;AACvBL,cAAM,QADiB;AAEvBE,uBAAe,iBAFQ;AAGvBC,gBAAQ,UAHe;AAIvB3B,eAAO,SAJgB;AAKvB4B,iBAAS,WALc;AAMvBE,YAAI,EAAEX;AANiB,OAAzB;AAQAL,aAAO,CAACiB,IAAR,CAAaF,KAAb;AACAhB,SAAG,CAACmB,MAAM,CAAChC,OAAD,CAAN,GAAkB,GAAlB,GAAwB0B,eAAzB,CAAH,GAA+CG,KAA/C;AACAd,OAAC,IAAIE,QAAL;AACD;;AAED,QAAMgB,GAAG,GAAG;AACV9B,UAAI,EAAE;AAAM;AAAO,OADT;AAEVF,0BAAoB,EAAE,UAACyB,eAAD,EAAkB1B,OAAlB,EAAyB;AAC7C,kBAAG,CAACgC,MAAM,CAAChC,OAAD,CAAN,GAAkB,GAAlB,GAAwB0B,eAAzB,CAAH;AAA4C;AAHpC,KAAZ;AAKAjB,SAAK,GAAGwB,GAAR;AACA,WAAOA,GAAP;AACD,GA7CD;AA8CD,CAhDsB,EAAvB","names":["blob","byContractAddressAndChainId","contract","chainId","byContractAndChainId","asContractAddress","list","addr","a","toLowerCase","startsWith","get","cache","buf","Buffer","from","map","entries","i","length","length_1","readUInt32BE","item","slice","j","tickerLength","readUInt8","ticker","toString","contractAddress","decimals","signature","entry","data","push","String","api"],"sourceRoot":"","sources":["../src/erc20.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}