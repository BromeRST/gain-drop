{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cosmosGetAddress = exports.cosmosSignTx = exports.cosmosGetAccountPaths = void 0;\n\nconst CosmosMessages = __importStar(require(\"@keepkey/device-protocol/lib/messages-cosmos_pb\"));\n\nconst Messages = __importStar(require(\"@keepkey/device-protocol/lib/messages_pb\"));\n\nconst core = __importStar(require(\"@shapeshiftoss/hdwallet-core\"));\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nfunction cosmosGetAccountPaths(msg) {\n  return [{\n    addressNList: [0x80000000 + 44, 0x80000000 + core.slip44ByCoin(\"Atom\"), 0x80000000 + msg.accountIdx, 0, 0]\n  }];\n}\n\nexports.cosmosGetAccountPaths = cosmosGetAccountPaths;\n\nfunction cosmosSignTx(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return transport.lockDuring(() => __awaiter(this, void 0, void 0, function* () {\n      const signTx = new CosmosMessages.CosmosSignTx();\n      signTx.setAddressNList(msg.addressNList);\n      signTx.setAccountNumber(msg.account_number);\n      signTx.setChainId(msg.chain_id);\n      signTx.setFeeAmount(parseInt(msg.tx.fee.amount[0].amount));\n      signTx.setGas(parseInt(msg.tx.fee.gas));\n      signTx.setSequence(msg.sequence);\n      if (msg.tx.memo !== undefined) signTx.setMemo(msg.tx.memo);\n      signTx.setMsgCount(1);\n      let resp = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSSIGNTX, signTx, {\n        msgTimeout: core.LONG_TIMEOUT,\n        omitLock: true\n      });\n\n      for (let m of msg.tx.msg) {\n        if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_COSMOSMSGREQUEST) {\n          throw new Error(`cosmos: unexpected response ${resp.message_type}`);\n        }\n\n        let ack;\n\n        if (m.type === \"cosmos-sdk/MsgSend\") {\n          if (m.value.amount.length !== 1) {\n            throw new Error(\"cosmos: Multiple amounts per msg not supported\");\n          }\n\n          const denom = m.value.amount[0].denom;\n\n          if (denom !== \"uatom\") {\n            throw new Error(\"cosmos: Unsupported denomination: \" + denom);\n          }\n\n          const send = new CosmosMessages.CosmosMsgSend();\n          send.setFromAddress(m.value.from_address);\n          send.setToAddress(m.value.to_address);\n          send.setAmount(m.value.amount[0].amount);\n          ack = new CosmosMessages.CosmosMsgAck();\n          ack.setSend(send);\n        } else {\n          throw new Error(`cosmos: Message ${m.type} is not yet supported`);\n        }\n\n        resp = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSMSGACK, ack, {\n          msgTimeout: core.LONG_TIMEOUT,\n          omitLock: true\n        });\n      }\n\n      if (resp.message_enum !== Messages.MessageType.MESSAGETYPE_COSMOSSIGNEDTX) {\n        throw new Error(`cosmos: unexpected response ${resp.message_type}`);\n      }\n\n      const signedTx = resp.proto;\n      const signed = lodash_1.default.cloneDeep(msg.tx);\n      signed.signatures = [{\n        pub_key: {\n          type: \"tendermint/PubKeySecp256k1\",\n          value: signedTx.getPublicKey_asB64()\n        },\n        signature: signedTx.getSignature_asB64()\n      }];\n      return signed;\n    }));\n  });\n}\n\nexports.cosmosSignTx = cosmosSignTx;\n\nfunction cosmosGetAddress(transport, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const getAddr = new CosmosMessages.CosmosGetAddress();\n    getAddr.setAddressNList(msg.addressNList);\n    getAddr.setShowDisplay(msg.showDisplay !== false);\n    const response = yield transport.call(Messages.MessageType.MESSAGETYPE_COSMOSGETADDRESS, getAddr, {\n      msgTimeout: core.LONG_TIMEOUT\n    });\n    const cosmosAddress = response.proto;\n    return core.mustBeDefined(cosmosAddress.getAddress());\n  });\n}\n\nexports.cosmosGetAddress = cosmosGetAddress;","map":{"version":3,"mappings":"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","names":["cosmosGetAccountPaths","msg","addressNList","core","slip44ByCoin","accountIdx","exports","cosmosSignTx","transport","lockDuring","__awaiter","signTx","CosmosMessages","CosmosSignTx","setAddressNList","setAccountNumber","account_number","setChainId","chain_id","setFeeAmount","parseInt","tx","fee","amount","setGas","gas","setSequence","sequence","memo","undefined","setMemo","setMsgCount","resp","call","Messages","MessageType","MESSAGETYPE_COSMOSSIGNTX","msgTimeout","LONG_TIMEOUT","omitLock","m","message_enum","MESSAGETYPE_COSMOSMSGREQUEST","Error","message_type","ack","type","value","length","denom","send","CosmosMsgSend","setFromAddress","from_address","setToAddress","to_address","setAmount","CosmosMsgAck","setSend","MESSAGETYPE_COSMOSMSGACK","MESSAGETYPE_COSMOSSIGNEDTX","signedTx","proto","signed","lodash_1","cloneDeep","signatures","pub_key","getPublicKey_asB64","signature","getSignature_asB64","cosmosGetAddress","getAddr","CosmosGetAddress","setShowDisplay","showDisplay","response","MESSAGETYPE_COSMOSGETADDRESS","cosmosAddress","mustBeDefined","getAddress"],"sourceRoot":"","sources":["../src/cosmos.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}